{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khush\\\\OneDrive\\\\Desktop\\\\new changes code\\\\frontend1\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Recorder from \"recorder-js\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backendUrl = \"http://localhost:5000\";\nconst MedicalChatbot = () => {\n  _s();\n  const [conversation, setConversation] = useState([]);\n  const [diagnosis, setDiagnosis] = useState(\"\");\n  const [keySymptoms, setKeySymptoms] = useState(\"\");\n  const [followUps, setFollowUps] = useState(\"\");\n  const [recommendations, setRecommendations] = useState(\"\");\n  const [displayFollowUps, setDisplayFollowUps] = useState(\"\");\n  const [displayRecommendations, setDisplayRecommendations] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [displayedDiagnosis, setDisplayedDiagnosis] = useState(\"\");\n  const [isDiagnosisFinal, setIsDiagnosisFinal] = useState(false);\n  const [spokenDiagnosis, setSpokenDiagnosis] = useState(false);\n  const [spokenKeySymptoms, setSpokenKeySymptoms] = useState(false);\n  const audioContextRef = useRef(null);\n  const recorderRef = useRef(null);\n  const silenceTimer = useRef(null);\n  const speechRef = useRef(null);\n  const fullDiagnosisRef = useRef(\"\");\n  const followUpsRef = useRef(\"\");\n  const recommendationsRef = useRef(\"\");\n  const keySymptomsRef = useRef(\"\");\n  useEffect(() => {\n    if (fullDiagnosisRef.current && !isDiagnosisFinal) {\n      revealAndSpeak(fullDiagnosisRef.current, setDisplayedDiagnosis);\n      setIsDiagnosisFinal(true);\n    }\n  }, [diagnosis]);\n  useEffect(() => {\n    if (keySymptomsRef.current && !spokenKeySymptoms) {\n      speakText(`Key symptoms identified: ${keySymptomsRef.current}`);\n      setSpokenKeySymptoms(true);\n    }\n  }, [keySymptoms]);\n  const revealAndSpeak = (text, setter) => {\n    let index = 0;\n    setter(\"\");\n    if (speechRef.current) window.speechSynthesis.cancel();\n    const speech = new SpeechSynthesisUtterance(text);\n    speech.lang = \"en-US\";\n    speech.rate = 1;\n    speech.pitch = 1;\n    speechRef.current = speech;\n    window.speechSynthesis.speak(speech);\n    const interval = setInterval(() => {\n      setter(prev => prev + text[index]);\n      index++;\n      if (index >= text.length) clearInterval(interval);\n    }, 30);\n  };\n  const handleStartRecording = async () => {\n    setError(null);\n    setIsRecording(true);\n    setIsDiagnosisFinal(false);\n    setSpokenDiagnosis(false);\n    setSpokenKeySymptoms(false);\n    try {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      recorderRef.current = new Recorder(audioContextRef.current);\n      recorderRef.current.init(stream);\n      recorderRef.current.start();\n      const audioInput = audioContextRef.current.createMediaStreamSource(stream);\n      const analyser = audioContextRef.current.createAnalyser();\n      audioInput.connect(analyser);\n      const checkSilence = () => {\n        const buffer = new Float32Array(analyser.fftSize);\n        analyser.getFloatTimeDomainData(buffer);\n        const maxAmplitude = Math.max(...buffer.map(Math.abs));\n        if (maxAmplitude < 0.01) {\n          if (!silenceTimer.current) {\n            silenceTimer.current = setTimeout(() => handleStopRecording(), 1500);\n          }\n        } else {\n          clearTimeout(silenceTimer.current);\n          silenceTimer.current = null;\n        }\n        requestAnimationFrame(checkSilence);\n      };\n      checkSilence();\n    } catch (error) {\n      setError(\"Microphone access denied or not available.\");\n      setIsRecording(false);\n    }\n  };\n  const handleStopRecording = async () => {\n    setIsRecording(false);\n    setIsProcessing(true);\n    clearTimeout(silenceTimer.current);\n    try {\n      const {\n        blob\n      } = await recorderRef.current.stop();\n      const audioFile = new File([blob], \"audio.wav\", {\n        type: \"audio/wav\"\n      });\n      const formData = new FormData();\n      formData.append(\"file\", audioFile);\n      const transcriptionResponse = await fetch(`${backendUrl}/transcribe`, {\n        method: \"POST\",\n        body: formData\n      });\n      const transcriptionData = await transcriptionResponse.json();\n      if (transcriptionData.error) {\n        setError(transcriptionData.error);\n        setIsProcessing(false);\n        return;\n      }\n      setConversation([{\n        role: \"AI\",\n        text: `Transcribed Text: ${transcriptionData.transcription}`\n      }]);\n      const analysisResponse = await fetch(`${backendUrl}/analyze`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: transcriptionData.transcription\n        })\n      });\n      const analysisData = await analysisResponse.json();\n      const result = analysisData.analysis;\n      const key = extractSection(result, \"Key Symptoms Identified\") || \"No key symptoms mentioned.\";\n      const diag = extractSection(result, \"Possible Medical Diagnosis\") || \"Diagnosis pending further details.\";\n      const follow = extractSection(result, \"Follow-up Questions for Further Diagnosis\") || \"No follow-up questions provided.\";\n      const reco = extractSection(result, \"Recommended Next Steps\") || \"No recommendations provided.\";\n      fullDiagnosisRef.current = diag;\n      followUpsRef.current = follow;\n      recommendationsRef.current = reco;\n      keySymptomsRef.current = key;\n      setKeySymptoms(key);\n      setDiagnosis(diag);\n    } catch (error) {\n      setError(\"Error processing the audio.\");\n    }\n    setIsProcessing(false);\n  };\n  const extractSection = (text, label) => {\n    const safeLabel = label.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    const regex = new RegExp(`\\\\*\\\\*${safeLabel}:\\\\*\\\\*\\\\s*([\\\\s\\\\S]*?)(?=\\\\n\\\\*\\\\*|$)`, \"m\");\n    const match = text.match(regex);\n    return match && match[1] ? match[1].replace(/undefined/g, \"\").trim() : null;\n  };\n  const speakText = text => {\n    if (speechRef.current) window.speechSynthesis.cancel();\n    const speech = new SpeechSynthesisUtterance(text);\n    speech.lang = \"en-US\";\n    speech.rate = 1;\n    speech.pitch = 1;\n    speechRef.current = speech;\n    window.speechSynthesis.speak(speech);\n  };\n  const handleFollowUpsClick = () => {\n    revealAndSpeak(followUpsRef.current, setDisplayFollowUps);\n  };\n  const handleRecommendationsClick = () => {\n    revealAndSpeak(recommendationsRef.current, setDisplayRecommendations);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Medical AI Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.role, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), \" \", msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 7\n    }, this), (keySymptoms || diagnosis) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diagnosis-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Diagnosis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Key Symptoms Identified:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 14\n        }, this), \" \", keySymptoms]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Possible Medical Diagnosis:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: displayedDiagnosis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFollowUpsClick,\n        children: \"Show Follow-up Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRecommendationsClick,\n        children: \"Show Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 206,\n        columnNumber: 11\n      }, this), displayFollowUps && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Follow-up Questions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: displayFollowUps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 13\n      }, this), displayRecommendations && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Recommendations:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: displayRecommendations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this), !isRecording && !isProcessing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartRecording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 223,\n      columnNumber: 9\n    }, this), isRecording && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83C\\uDF99\\uFE0F Listening... Speak now.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 186,\n    columnNumber: 5\n  }, this);\n};\n_s(MedicalChatbot, \"0C5bbxk0x3BddZPqXCGBv5F/ORI=\");\n_c = MedicalChatbot;\nexport default MedicalChatbot;\nvar _c;\n$RefreshReg$(_c, \"MedicalChatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Recorder","jsxDEV","_jsxDEV","backendUrl","MedicalChatbot","_s","conversation","setConversation","diagnosis","setDiagnosis","keySymptoms","setKeySymptoms","followUps","setFollowUps","recommendations","setRecommendations","displayFollowUps","setDisplayFollowUps","displayRecommendations","setDisplayRecommendations","error","setError","isRecording","setIsRecording","isProcessing","setIsProcessing","displayedDiagnosis","setDisplayedDiagnosis","isDiagnosisFinal","setIsDiagnosisFinal","spokenDiagnosis","setSpokenDiagnosis","spokenKeySymptoms","setSpokenKeySymptoms","audioContextRef","recorderRef","silenceTimer","speechRef","fullDiagnosisRef","followUpsRef","recommendationsRef","keySymptomsRef","current","revealAndSpeak","speakText","text","setter","index","window","speechSynthesis","cancel","speech","SpeechSynthesisUtterance","lang","rate","pitch","speak","interval","setInterval","prev","length","clearInterval","handleStartRecording","AudioContext","webkitAudioContext","stream","navigator","mediaDevices","getUserMedia","audio","init","start","audioInput","createMediaStreamSource","analyser","createAnalyser","connect","checkSilence","buffer","Float32Array","fftSize","getFloatTimeDomainData","maxAmplitude","Math","max","map","abs","setTimeout","handleStopRecording","clearTimeout","requestAnimationFrame","blob","stop","audioFile","File","type","formData","FormData","append","transcriptionResponse","fetch","method","body","transcriptionData","json","role","transcription","analysisResponse","headers","JSON","stringify","analysisData","result","analysis","key","extractSection","diag","follow","reco","label","safeLabel","replace","regex","RegExp","match","trim","handleFollowUpsClick","handleRecommendationsClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","msg","onClick","_c","$RefreshReg$"],"sources":["C:/Users/khush/OneDrive/Desktop/new changes code/frontend1/src/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport Recorder from \"recorder-js\";\r\nimport \"./Chatbot.css\";\r\n\r\nconst backendUrl = \"http://localhost:5000\";\r\n\r\nconst MedicalChatbot = () => {\r\n  const [conversation, setConversation] = useState([]);\r\n  const [diagnosis, setDiagnosis] = useState(\"\");\r\n  const [keySymptoms, setKeySymptoms] = useState(\"\");\r\n  const [followUps, setFollowUps] = useState(\"\");\r\n  const [recommendations, setRecommendations] = useState(\"\");\r\n  const [displayFollowUps, setDisplayFollowUps] = useState(\"\");\r\n  const [displayRecommendations, setDisplayRecommendations] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [displayedDiagnosis, setDisplayedDiagnosis] = useState(\"\");\r\n  const [isDiagnosisFinal, setIsDiagnosisFinal] = useState(false);\r\n  const [spokenDiagnosis, setSpokenDiagnosis] = useState(false);\r\n  const [spokenKeySymptoms, setSpokenKeySymptoms] = useState(false);\r\n\r\n  const audioContextRef = useRef(null);\r\n  const recorderRef = useRef(null);\r\n  const silenceTimer = useRef(null);\r\n  const speechRef = useRef(null);\r\n  const fullDiagnosisRef = useRef(\"\");\r\n  const followUpsRef = useRef(\"\");\r\n  const recommendationsRef = useRef(\"\");\r\n  const keySymptomsRef = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    if (fullDiagnosisRef.current && !isDiagnosisFinal) {\r\n      revealAndSpeak(fullDiagnosisRef.current, setDisplayedDiagnosis);\r\n      setIsDiagnosisFinal(true);\r\n    }\r\n  }, [diagnosis]);\r\n\r\n  useEffect(() => {\r\n    if (keySymptomsRef.current && !spokenKeySymptoms) {\r\n      speakText(`Key symptoms identified: ${keySymptomsRef.current}`);\r\n      setSpokenKeySymptoms(true);\r\n    }\r\n  }, [keySymptoms]);\r\n\r\n  const revealAndSpeak = (text, setter) => {\r\n    let index = 0;\r\n    setter(\"\");\r\n    if (speechRef.current) window.speechSynthesis.cancel();\r\n    const speech = new SpeechSynthesisUtterance(text);\r\n    speech.lang = \"en-US\";\r\n    speech.rate = 1;\r\n    speech.pitch = 1;\r\n    speechRef.current = speech;\r\n    window.speechSynthesis.speak(speech);\r\n\r\n    const interval = setInterval(() => {\r\n      setter((prev) => prev + text[index]);\r\n      index++;\r\n      if (index >= text.length) clearInterval(interval);\r\n    }, 30);\r\n  };\r\n\r\n  const handleStartRecording = async () => {\r\n    setError(null);\r\n    setIsRecording(true);\r\n    setIsDiagnosisFinal(false);\r\n    setSpokenDiagnosis(false);\r\n    setSpokenKeySymptoms(false);\r\n\r\n    try {\r\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      recorderRef.current = new Recorder(audioContextRef.current);\r\n      recorderRef.current.init(stream);\r\n      recorderRef.current.start();\r\n\r\n      const audioInput = audioContextRef.current.createMediaStreamSource(stream);\r\n      const analyser = audioContextRef.current.createAnalyser();\r\n      audioInput.connect(analyser);\r\n\r\n      const checkSilence = () => {\r\n        const buffer = new Float32Array(analyser.fftSize);\r\n        analyser.getFloatTimeDomainData(buffer);\r\n        const maxAmplitude = Math.max(...buffer.map(Math.abs));\r\n\r\n        if (maxAmplitude < 0.01) {\r\n          if (!silenceTimer.current) {\r\n            silenceTimer.current = setTimeout(() => handleStopRecording(), 1500);\r\n          }\r\n        } else {\r\n          clearTimeout(silenceTimer.current);\r\n          silenceTimer.current = null;\r\n        }\r\n        requestAnimationFrame(checkSilence);\r\n      };\r\n\r\n      checkSilence();\r\n    } catch (error) {\r\n      setError(\"Microphone access denied or not available.\");\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  const handleStopRecording = async () => {\r\n    setIsRecording(false);\r\n    setIsProcessing(true);\r\n    clearTimeout(silenceTimer.current);\r\n\r\n    try {\r\n      const { blob } = await recorderRef.current.stop();\r\n      const audioFile = new File([blob], \"audio.wav\", { type: \"audio/wav\" });\r\n      const formData = new FormData();\r\n      formData.append(\"file\", audioFile);\r\n\r\n      const transcriptionResponse = await fetch(`${backendUrl}/transcribe`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const transcriptionData = await transcriptionResponse.json();\r\n      if (transcriptionData.error) {\r\n        setError(transcriptionData.error);\r\n        setIsProcessing(false);\r\n        return;\r\n      }\r\n\r\n      setConversation([\r\n        { role: \"AI\", text: `Transcribed Text: ${transcriptionData.transcription}` },\r\n      ]);\r\n\r\n      const analysisResponse = await fetch(`${backendUrl}/analyze`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ text: transcriptionData.transcription }),\r\n      });\r\n\r\n      const analysisData = await analysisResponse.json();\r\n      const result = analysisData.analysis;\r\n\r\n      const key = extractSection(result, \"Key Symptoms Identified\") || \"No key symptoms mentioned.\";\r\n      const diag = extractSection(result, \"Possible Medical Diagnosis\") || \"Diagnosis pending further details.\";\r\n      const follow = extractSection(result, \"Follow-up Questions for Further Diagnosis\") || \"No follow-up questions provided.\";\r\n      const reco = extractSection(result, \"Recommended Next Steps\") || \"No recommendations provided.\";\r\n\r\n      fullDiagnosisRef.current = diag;\r\n      followUpsRef.current = follow;\r\n      recommendationsRef.current = reco;\r\n      keySymptomsRef.current = key;\r\n\r\n      setKeySymptoms(key);\r\n      setDiagnosis(diag);\r\n    } catch (error) {\r\n      setError(\"Error processing the audio.\");\r\n    }\r\n\r\n    setIsProcessing(false);\r\n  };\r\n\r\n  const extractSection = (text, label) => {\r\n    const safeLabel = label.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    const regex = new RegExp(`\\\\*\\\\*${safeLabel}:\\\\*\\\\*\\\\s*([\\\\s\\\\S]*?)(?=\\\\n\\\\*\\\\*|$)`, \"m\");\r\n    const match = text.match(regex);\r\n    return match && match[1] ? match[1].replace(/undefined/g, \"\").trim() : null;\r\n  };\r\n\r\n  const speakText = (text) => {\r\n    if (speechRef.current) window.speechSynthesis.cancel();\r\n    const speech = new SpeechSynthesisUtterance(text);\r\n    speech.lang = \"en-US\";\r\n    speech.rate = 1;\r\n    speech.pitch = 1;\r\n    speechRef.current = speech;\r\n    window.speechSynthesis.speak(speech);\r\n  };\r\n\r\n  const handleFollowUpsClick = () => {\r\n    revealAndSpeak(followUpsRef.current, setDisplayFollowUps);\r\n  };\r\n\r\n  const handleRecommendationsClick = () => {\r\n    revealAndSpeak(recommendationsRef.current, setDisplayRecommendations);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <h1>Medical AI Chatbot</h1>\r\n      {error && <p className=\"error-message\">Error: {error}</p>}\r\n\r\n      <div className=\"chatbox\">\r\n        {conversation.map((msg, index) => (\r\n          <div key={index} className=\"message\">\r\n            <strong>{msg.role}: </strong> {msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {(keySymptoms || diagnosis) && (\r\n        <div className=\"diagnosis-box\">\r\n          <h2>Diagnosis</h2>\r\n          <p><strong>Key Symptoms Identified:</strong> {keySymptoms}</p>\r\n          <p><strong>Possible Medical Diagnosis:</strong></p>\r\n          <p>{displayedDiagnosis}</p>\r\n          <br />\r\n          <button onClick={handleFollowUpsClick}>Show Follow-up Questions</button>\r\n          <button onClick={handleRecommendationsClick}>Show Recommendations</button>\r\n          {displayFollowUps && (\r\n            <div>\r\n              <h4>Follow-up Questions:</h4>\r\n              <p>{displayFollowUps}</p>\r\n            </div>\r\n          )}\r\n          {displayRecommendations && (\r\n            <div>\r\n              <h4>Recommendations:</h4>\r\n              <p>{displayRecommendations}</p>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {!isRecording && !isProcessing && (\r\n        <button onClick={handleStartRecording}>Start Recording</button>\r\n      )}\r\n\r\n      {isRecording && <p>🎙️ Listening... Speak now.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicalChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"import React,{useState,useRef,useEffect}from\"react\";import Recorder from\"recorder-js\";import\"./Chatbot.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const backendUrl=\"http://localhost:5000\";const MedicalChatbot=()=>{const[conversation,setConversation]=useState([]);const[diagnosis,setDiagnosis]=useState(\"\");const[keySymptoms,setKeySymptoms]=useState(\"\");const[followUps,setFollowUps]=useState(\"\");const[recommendations,setRecommendations]=useState(\"\");const[displayFollowUps,setDisplayFollowUps]=useState(\"\");const[displayRecommendations,setDisplayRecommendations]=useState(\"\");const[error,setError]=useState(null);const[isRecording,setIsRecording]=useState(false);const[isProcessing,setIsProcessing]=useState(false);const[displayedDiagnosis,setDisplayedDiagnosis]=useState(\"\");const[displayedSymptoms,setDisplayedSymptoms]=useState(\"\");const[isDiagnosisFinal,setIsDiagnosisFinal]=useState(false);const audioContextRef=useRef(null);const recorderRef=useRef(null);const silenceTimer=useRef(null);const speechRef=useRef(null);const fullDiagnosisRef=useRef(\"\");const followUpsRef=useRef(\"\");const recommendationsRef=useRef(\"\");const keySymptomsRef=useRef(\"\");useEffect(()=>{if(keySymptomsRef.current&&!displayedSymptoms){revealTextAndSpeak(keySymptomsRef.current,setDisplayedSymptoms);}if(fullDiagnosisRef.current&&!isDiagnosisFinal){revealTextAndSpeak(fullDiagnosisRef.current,setDisplayedDiagnosis);setIsDiagnosisFinal(true);}},[diagnosis,keySymptoms,isDiagnosisFinal,displayedSymptoms]);const revealTextAndSpeak=(text,setter)=>{if(!text)return;let index=0;setter(\"\");let fullText=\"\";const interval=setInterval(()=>{const nextChar=text[index];fullText+=nextChar;setter(prev=>prev+nextChar);index++;if(index>=text.length){clearInterval(interval);const speech=new SpeechSynthesisUtterance(fullText);speech.lang=\"en-US\";speech.rate=1;speech.pitch=1;window.speechSynthesis.speak(speech);}},60);};const handleStartRecording=async()=>{setError(null);setIsRecording(true);try{audioContextRef.current=new(window.AudioContext||window.webkitAudioContext)();const stream=await navigator.mediaDevices.getUserMedia({audio:true});recorderRef.current=new Recorder(audioContextRef.current);await recorderRef.current.init(stream);recorderRef.current.start();const audioInput=audioContextRef.current.createMediaStreamSource(stream);const analyser=audioContextRef.current.createAnalyser();audioInput.connect(analyser);const checkSilence=()=>{const buffer=new Float32Array(analyser.fftSize);analyser.getFloatTimeDomainData(buffer);const maxAmplitude=Math.max(...buffer.map(Math.abs));if(maxAmplitude<0.01){if(!silenceTimer.current){silenceTimer.current=setTimeout(()=>handleStopRecording(),1500);}}else{clearTimeout(silenceTimer.current);silenceTimer.current=null;}requestAnimationFrame(checkSilence);};checkSilence();}catch(error){setError(\"Microphone access denied or not available.\");setIsRecording(false);}};const handleStopRecording=async()=>{setIsRecording(false);setIsProcessing(true);clearTimeout(silenceTimer.current);try{const{blob}=await recorderRef.current.stop();const audioFile=new File([blob],\"latest_audio.wav\",{type:\"audio/wav\"});const formData=new FormData();formData.append(\"file\",audioFile);const transcriptionResponse=await fetch(`${backendUrl}/transcribe`,{method:\"POST\",body:formData});const transcriptionData=await transcriptionResponse.json();if(transcriptionData.error){setError(transcriptionData.error);setIsProcessing(false);return;}setConversation([{role:\"AI\",text:`Transcribed Text: ${transcriptionData.transcription}`}]);const analysisResponse=await fetch(`${backendUrl}/analyze`,{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({text:transcriptionData.transcription})});const analysisData=await analysisResponse.json();const result=cleanText(analysisData.analysis);keySymptomsRef.current=extractSection(result,\"Key Symptoms Identified\")||\"No key symptoms mentioned.\";fullDiagnosisRef.current=extractSection(result,\"Possible Medical Diagnosis\")||\"Diagnosis pending further details.\";followUpsRef.current=extractSection(result,\"Follow-up Questions for Further Diagnosis\")||\"No follow-up questions provided.\";recommendationsRef.current=extractSection(result,\"Recommended Next Steps\")||\"No recommendations provided.\";setKeySymptoms(keySymptomsRef.current);setDiagnosis(fullDiagnosisRef.current);}catch(error){setError(\"Server error: \"+error.message);}setIsProcessing(false);};const extractSection=(text,label)=>{const safeLabel=label.replace(/[.*+?^${}()|[\\]\\\\]/g,\"\\\\$&\");const regex=new RegExp(`\\\\*\\\\*${safeLabel}:\\\\*\\\\*\\\\s*([\\\\s\\\\S]*?)(?=\\\\n\\\\*\\\\*|$)`,\"m\");const match=text.match(regex);if(match){return match[1].trim();}return`No ${label} found.`;};// Ensure cleanText is defined before it is used\nconst cleanText=text=>{if(!text)return\"\";text=text.replace(/(\\w)\\1{2,}/g,\"$1\");text=text.replace(/[^a-zA-Z0-9.,?!\"' ]/g,\"\");text=text.replace(/\\.\\s+/g,\". \").trim();return text;};const fixTypos=text=>{if(!text)return\"\";// Remove consecutive repeated characters (handles more cases)\ntext=text.replace(/(\\w)\\1{2,}/g,\"$1\");// Replace double spaces with a single space and trim extra spaces at the start/end\ntext=text.replace(/\\s+/g,' ').trim();return text;};const speakText=text=>{if(speechRef.current)window.speechSynthesis.cancel();const speech=new SpeechSynthesisUtterance(text);speech.lang=\"en-US\";speech.rate=1;speech.pitch=1;speechRef.current=speech;window.speechSynthesis.speak(speech);};const handleFollowUpsClick=()=>{revealTextAndSpeak(followUpsRef.current,setDisplayFollowUps);};const handleRecommendationsClick=()=>{revealTextAndSpeak(recommendationsRef.current,setDisplayRecommendations);};return/*#__PURE__*/_jsxs(\"div\",{className:\"chatbot-container\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Medical AI Chatbot\"}),error&&/*#__PURE__*/_jsxs(\"p\",{className:\"error-message\",children:[\"Error: \",error]}),/*#__PURE__*/_jsx(\"div\",{className:\"chatbox\",children:conversation.map((msg,index)=>/*#__PURE__*/_jsxs(\"div\",{className:\"message\",children:[/*#__PURE__*/_jsxs(\"strong\",{children:[msg.role,\": \"]}),msg.text]},index))}),(keySymptoms||diagnosis)&&/*#__PURE__*/_jsxs(\"div\",{className:\"diagnosis-box\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"Diagnosis\"}),/*#__PURE__*/_jsxs(\"p\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Key Symptoms Identified:\"}),\" \",displayedSymptoms]}),/*#__PURE__*/_jsx(\"p\",{children:/*#__PURE__*/_jsx(\"strong\",{children:\"Possible Medical Diagnosis:\"})}),/*#__PURE__*/_jsx(\"p\",{children:displayedDiagnosis}),/*#__PURE__*/_jsx(\"br\",{}),/*#__PURE__*/_jsx(\"button\",{onClick:handleFollowUpsClick,children:\"Show Follow-up Questions\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleRecommendationsClick,children:\"Show Recommendations\"}),displayFollowUps&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Follow-up Questions:\"}),/*#__PURE__*/_jsx(\"p\",{children:displayFollowUps})]}),displayRecommendations&&/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h4\",{children:\"Recommendations:\"}),/*#__PURE__*/_jsx(\"p\",{children:displayRecommendations})]})]}),!isRecording&&!isProcessing&&/*#__PURE__*/_jsx(\"button\",{onClick:handleStartRecording,children:\"Start Recording\"}),isRecording&&/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83C\\uDF99\\uFE0F Listening... Speak now.\"}),isProcessing&&/*#__PURE__*/_jsx(\"p\",{children:\"\\uD83D\\uDD04 Processing audio, please wait...\"})]});};export default MedicalChatbot;","map":{"version":3,"names":["React","useState","useRef","useEffect","Recorder","jsx","_jsx","jsxs","_jsxs","backendUrl","MedicalChatbot","conversation","setConversation","diagnosis","setDiagnosis","keySymptoms","setKeySymptoms","followUps","setFollowUps","recommendations","setRecommendations","displayFollowUps","setDisplayFollowUps","displayRecommendations","setDisplayRecommendations","error","setError","isRecording","setIsRecording","isProcessing","setIsProcessing","displayedDiagnosis","setDisplayedDiagnosis","displayedSymptoms","setDisplayedSymptoms","isDiagnosisFinal","setIsDiagnosisFinal","audioContextRef","recorderRef","silenceTimer","speechRef","fullDiagnosisRef","followUpsRef","recommendationsRef","keySymptomsRef","current","revealTextAndSpeak","text","setter","index","fullText","interval","setInterval","nextChar","prev","length","clearInterval","speech","SpeechSynthesisUtterance","lang","rate","pitch","window","speechSynthesis","speak","handleStartRecording","AudioContext","webkitAudioContext","stream","navigator","mediaDevices","getUserMedia","audio","init","start","audioInput","createMediaStreamSource","analyser","createAnalyser","connect","checkSilence","buffer","Float32Array","fftSize","getFloatTimeDomainData","maxAmplitude","Math","max","map","abs","setTimeout","handleStopRecording","clearTimeout","requestAnimationFrame","blob","stop","audioFile","File","type","formData","FormData","append","transcriptionResponse","fetch","method","body","transcriptionData","json","role","transcription","analysisResponse","headers","JSON","stringify","analysisData","result","cleanText","analysis","extractSection","message","label","safeLabel","replace","regex","RegExp","match","trim","fixTypos","speakText","cancel","handleFollowUpsClick","handleRecommendationsClick","className","children","msg","onClick"],"sources":["C:/Users/khush/OneDrive/Desktop/new changes code/frontend1/src/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport Recorder from \"recorder-js\";\r\nimport \"./Chatbot.css\";\r\n\r\nconst backendUrl = \"http://localhost:5000\";\r\n\r\nconst MedicalChatbot = () => {\r\n  const [conversation, setConversation] = useState([]);\r\n  const [diagnosis, setDiagnosis] = useState(\"\");\r\n  const [keySymptoms, setKeySymptoms] = useState(\"\");\r\n  const [followUps, setFollowUps] = useState(\"\");\r\n  const [recommendations, setRecommendations] = useState(\"\");\r\n  const [displayFollowUps, setDisplayFollowUps] = useState(\"\");\r\n  const [displayRecommendations, setDisplayRecommendations] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [displayedDiagnosis, setDisplayedDiagnosis] = useState(\"\");\r\n  const [displayedSymptoms, setDisplayedSymptoms] = useState(\"\");\r\n  const [isDiagnosisFinal, setIsDiagnosisFinal] = useState(false);\r\n\r\n  const audioContextRef = useRef(null);\r\n  const recorderRef = useRef(null);\r\n  const silenceTimer = useRef(null);\r\n  const speechRef = useRef(null);\r\n  const fullDiagnosisRef = useRef(\"\");\r\n  const followUpsRef = useRef(\"\");\r\n  const recommendationsRef = useRef(\"\");\r\n  const keySymptomsRef = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    if (keySymptomsRef.current && !displayedSymptoms) {\r\n      revealTextAndSpeak(keySymptomsRef.current, setDisplayedSymptoms);\r\n    }\r\n    if (fullDiagnosisRef.current && !isDiagnosisFinal) {\r\n      revealTextAndSpeak(fullDiagnosisRef.current, setDisplayedDiagnosis);\r\n      setIsDiagnosisFinal(true);\r\n    }\r\n  }, [diagnosis, keySymptoms, isDiagnosisFinal, displayedSymptoms]);\r\n\r\n  const revealTextAndSpeak = (text, setter) => {\r\n    if (!text) return;\r\n    let index = 0;\r\n    setter(\"\");\r\n    let fullText = \"\";\r\n\r\n    const interval = setInterval(() => {\r\n      const nextChar = text[index];\r\n      fullText += nextChar;\r\n      setter((prev) => prev + nextChar);\r\n      index++;\r\n      if (index >= text.length) {\r\n        clearInterval(interval);\r\n        const speech = new SpeechSynthesisUtterance(fullText);\r\n        speech.lang = \"en-US\";\r\n        speech.rate = 1;\r\n        speech.pitch = 1;\r\n        window.speechSynthesis.speak(speech);\r\n      }\r\n    }, 60);\r\n  };\r\n\r\n  const handleStartRecording = async () => {\r\n    setError(null);\r\n    setIsRecording(true);\r\n    try {\r\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      recorderRef.current = new Recorder(audioContextRef.current);\r\n      await recorderRef.current.init(stream);\r\n      recorderRef.current.start();\r\n\r\n      const audioInput = audioContextRef.current.createMediaStreamSource(stream);\r\n      const analyser = audioContextRef.current.createAnalyser();\r\n      audioInput.connect(analyser);\r\n\r\n      const checkSilence = () => {\r\n        const buffer = new Float32Array(analyser.fftSize);\r\n        analyser.getFloatTimeDomainData(buffer);\r\n        const maxAmplitude = Math.max(...buffer.map(Math.abs));\r\n\r\n        if (maxAmplitude < 0.01) {\r\n          if (!silenceTimer.current) {\r\n            silenceTimer.current = setTimeout(() => handleStopRecording(), 1500);\r\n          }\r\n        } else {\r\n          clearTimeout(silenceTimer.current);\r\n          silenceTimer.current = null;\r\n        }\r\n        requestAnimationFrame(checkSilence);\r\n      };\r\n\r\n      checkSilence();\r\n    } catch (error) {\r\n      setError(\"Microphone access denied or not available.\");\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  const handleStopRecording = async () => {\r\n    setIsRecording(false);\r\n    setIsProcessing(true);\r\n    clearTimeout(silenceTimer.current);\r\n\r\n    try {\r\n      const { blob } = await recorderRef.current.stop();\r\n      const audioFile = new File([blob], \"latest_audio.wav\", { type: \"audio/wav\" });\r\n      const formData = new FormData();\r\n      formData.append(\"file\", audioFile);\r\n\r\n      const transcriptionResponse = await fetch(`${backendUrl}/transcribe`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const transcriptionData = await transcriptionResponse.json();\r\n      if (transcriptionData.error) {\r\n        setError(transcriptionData.error);\r\n        setIsProcessing(false);\r\n        return;\r\n      }\r\n\r\n      setConversation([{ role: \"AI\", text: `Transcribed Text: ${transcriptionData.transcription}` }]);\r\n\r\n      const analysisResponse = await fetch(`${backendUrl}/analyze`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ text: transcriptionData.transcription }),\r\n      });\r\n\r\n      const analysisData = await analysisResponse.json();\r\n      const result = cleanText(analysisData.analysis);\r\n\r\n      keySymptomsRef.current = extractSection(result, \"Key Symptoms Identified\") || \"No key symptoms mentioned.\";\r\n      fullDiagnosisRef.current = extractSection(result, \"Possible Medical Diagnosis\") || \"Diagnosis pending further details.\";\r\n      followUpsRef.current = extractSection(result, \"Follow-up Questions for Further Diagnosis\") || \"No follow-up questions provided.\";\r\n      recommendationsRef.current = extractSection(result, \"Recommended Next Steps\") || \"No recommendations provided.\";\r\n\r\n      setKeySymptoms(keySymptomsRef.current);\r\n      setDiagnosis(fullDiagnosisRef.current);\r\n    } catch (error) {\r\n      setError(\"Server error: \" + error.message);\r\n    }\r\n\r\n    setIsProcessing(false);\r\n  };\r\n\r\n  const extractSection = (text, label) => {\r\n    const safeLabel = label.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    const regex = new RegExp(`\\\\*\\\\*${safeLabel}:\\\\*\\\\*\\\\s*([\\\\s\\\\S]*?)(?=\\\\n\\\\*\\\\*|$)`, \"m\");\r\n    const match = text.match(regex);\r\n    if (match) {\r\n      return match[1].trim();\r\n    }\r\n    return `No ${label} found.`;\r\n  };\r\n  \r\n\r\n// Ensure cleanText is defined before it is used\r\nconst cleanText = (text) => {\r\n  if (!text) return \"\";\r\n  text = text.replace(/(\\w)\\1{2,}/g, \"$1\");\r\n  text = text.replace(/[^a-zA-Z0-9.,?!\"' ]/g, \"\");\r\n  text = text.replace(/\\.\\s+/g, \". \").trim();\r\n  return text;\r\n};\r\n\r\n\r\n  const fixTypos = (text) => {\r\n    if (!text) return \"\";\r\n    // Remove consecutive repeated characters (handles more cases)\r\n    text = text.replace(/(\\w)\\1{2,}/g, \"$1\");\r\n    // Replace double spaces with a single space and trim extra spaces at the start/end\r\n    text = text.replace(/\\s+/g, ' ').trim();\r\n    return text;\r\n  };\r\n  \r\n  \r\n  \r\n\r\n  const speakText = (text) => {\r\n    if (speechRef.current) window.speechSynthesis.cancel();\r\n    const speech = new SpeechSynthesisUtterance(text);\r\n    speech.lang = \"en-US\";\r\n    speech.rate = 1;\r\n    speech.pitch = 1;\r\n    speechRef.current = speech;\r\n    window.speechSynthesis.speak(speech);\r\n  };\r\n\r\n  const handleFollowUpsClick = () => {\r\n    revealTextAndSpeak(followUpsRef.current, setDisplayFollowUps);\r\n  };\r\n\r\n  const handleRecommendationsClick = () => {\r\n    revealTextAndSpeak(recommendationsRef.current, setDisplayRecommendations);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <h1>Medical AI Chatbot</h1>\r\n      {error && <p className=\"error-message\">Error: {error}</p>}\r\n\r\n      <div className=\"chatbox\">\r\n        {conversation.map((msg, index) => (\r\n          <div key={index} className=\"message\">\r\n            <strong>{msg.role}: </strong>{msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {(keySymptoms || diagnosis) && (\r\n        <div className=\"diagnosis-box\">\r\n          <h2>Diagnosis</h2>\r\n          <p><strong>Key Symptoms Identified:</strong> {displayedSymptoms}</p>\r\n          <p><strong>Possible Medical Diagnosis:</strong></p>\r\n          <p>{displayedDiagnosis}</p>\r\n          <br />\r\n          <button onClick={handleFollowUpsClick}>Show Follow-up Questions</button>\r\n          <button onClick={handleRecommendationsClick}>Show Recommendations</button>\r\n          {displayFollowUps && <div><h4>Follow-up Questions:</h4><p>{displayFollowUps}</p></div>}\r\n          {displayRecommendations && <div><h4>Recommendations:</h4><p>{displayRecommendations}</p></div>}\r\n        </div>\r\n      )}\r\n\r\n      {!isRecording && !isProcessing && (\r\n        <button onClick={handleStartRecording}>Start Recording</button>\r\n      )}\r\n\r\n      {isRecording && <p>🎙️ Listening... Speak now.</p>}\r\n      {isProcessing && <p>🔄 Processing audio, please wait...</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicalChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
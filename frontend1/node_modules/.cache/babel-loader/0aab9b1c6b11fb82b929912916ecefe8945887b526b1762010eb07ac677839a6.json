{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khush\\\\OneDrive\\\\Desktop\\\\frontend1\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport Recorder from \"recorder-js\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backendUrl = \"http://localhost:5000\";\nconst MedicalChatbot = () => {\n  _s();\n  const [conversation, setConversation] = useState([]);\n  const [diagnosis, setDiagnosis] = useState(null);\n  const [error, setError] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const audioContextRef = useRef(null);\n  const recorderRef = useRef(null);\n  const silenceTimer = useRef(null);\n  const speechRef = useRef(null);\n  const handleStartRecording = async () => {\n    setError(null);\n    setIsRecording(true);\n    try {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      recorderRef.current = new Recorder(audioContextRef.current);\n      recorderRef.current.init(stream);\n      recorderRef.current.start();\n    } catch (error) {\n      setError(\"Microphone access denied or not available.\");\n      setIsRecording(false);\n    }\n  };\n  const handleStopRecording = async () => {\n    setIsRecording(false);\n    setIsProcessing(true);\n    try {\n      const {\n        blob\n      } = await recorderRef.current.stop();\n      const audioFile = new File([blob], \"audio.wav\", {\n        type: \"audio/wav\"\n      });\n      const formData = new FormData();\n      formData.append(\"audio\", audioFile);\n\n      // Send recorded audio to backend\n      const transcriptionResponse = await fetch(`${backendUrl}/upload_audio`, {\n        method: \"POST\",\n        body: formData\n      });\n      const transcriptionData = await transcriptionResponse.json();\n      if (transcriptionData.error) {\n        setError(transcriptionData.error);\n        setIsProcessing(false);\n        return;\n      }\n      setConversation([{\n        role: \"AI\",\n        text: `Transcribed Text: ${transcriptionData.transcription}`\n      }]);\n      setDiagnosis(transcriptionData.analysis);\n    } catch (error) {\n      setError(\"Error processing the audio.\");\n    }\n    setIsProcessing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Medical AI Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.role, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, this), msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), diagnosis && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diagnosis-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Diagnosis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: diagnosis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }, this), !isRecording && !isProcessing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartRecording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 41\n    }, this), isRecording && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Listening... Speak now.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(MedicalChatbot, \"8ER57zNWMyhKxCrgqGwIo1uQras=\");\n_c = MedicalChatbot;\nexport default MedicalChatbot;\nvar _c;\n$RefreshReg$(_c, \"MedicalChatbot\");","map":{"version":3,"names":["React","useState","useRef","Recorder","jsxDEV","_jsxDEV","backendUrl","MedicalChatbot","_s","conversation","setConversation","diagnosis","setDiagnosis","error","setError","isRecording","setIsRecording","isProcessing","setIsProcessing","audioContextRef","recorderRef","silenceTimer","speechRef","handleStartRecording","current","window","AudioContext","webkitAudioContext","stream","navigator","mediaDevices","getUserMedia","audio","init","start","handleStopRecording","blob","stop","audioFile","File","type","formData","FormData","append","transcriptionResponse","fetch","method","body","transcriptionData","json","role","text","transcription","analysis","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","msg","index","onClick","_c","$RefreshReg$"],"sources":["C:/Users/khush/OneDrive/Desktop/frontend1/src/Chatbot.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport Recorder from \"recorder-js\";\r\nimport \"./Chatbot.css\";\r\n\r\nconst backendUrl = \"http://localhost:5000\";\r\n\r\nconst MedicalChatbot = () => {\r\n  const [conversation, setConversation] = useState([]);\r\n  const [diagnosis, setDiagnosis] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n\r\n  const audioContextRef = useRef(null);\r\n  const recorderRef = useRef(null);\r\n  const silenceTimer = useRef(null);\r\n  const speechRef = useRef(null);\r\n\r\n  const handleStartRecording = async () => {\r\n    setError(null);\r\n    setIsRecording(true);\r\n\r\n    try {\r\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      recorderRef.current = new Recorder(audioContextRef.current);\r\n      recorderRef.current.init(stream);\r\n      recorderRef.current.start();\r\n    } catch (error) {\r\n      setError(\"Microphone access denied or not available.\");\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  const handleStopRecording = async () => {\r\n    setIsRecording(false);\r\n    setIsProcessing(true);\r\n\r\n    try {\r\n      const { blob } = await recorderRef.current.stop();\r\n      const audioFile = new File([blob], \"audio.wav\", { type: \"audio/wav\" });\r\n\r\n      const formData = new FormData();\r\n      formData.append(\"audio\", audioFile);\r\n\r\n      // Send recorded audio to backend\r\n      const transcriptionResponse = await fetch(`${backendUrl}/upload_audio`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const transcriptionData = await transcriptionResponse.json();\r\n      if (transcriptionData.error) {\r\n        setError(transcriptionData.error);\r\n        setIsProcessing(false);\r\n        return;\r\n      }\r\n\r\n      setConversation([{ role: \"AI\", text: `Transcribed Text: ${transcriptionData.transcription}` }]);\r\n      setDiagnosis(transcriptionData.analysis);\r\n    } catch (error) {\r\n      setError(\"Error processing the audio.\");\r\n    }\r\n\r\n    setIsProcessing(false);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <h1>Medical AI Chatbot</h1>\r\n      {error && <p className=\"error-message\">Error: {error}</p>}\r\n      <div className=\"chatbox\">\r\n        {conversation.map((msg, index) => (\r\n          <div key={index} className=\"message\">\r\n            <strong>{msg.role}: </strong>{msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n      {diagnosis && (\r\n        <div className=\"diagnosis-box\">\r\n          <h2>Diagnosis</h2>\r\n          <p>{diagnosis}</p>\r\n        </div>\r\n      )}\r\n      {!isRecording && !isProcessing && <button onClick={handleStartRecording}>Start Recording</button>}\r\n      {isRecording && <p>Listening... Speak now.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicalChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
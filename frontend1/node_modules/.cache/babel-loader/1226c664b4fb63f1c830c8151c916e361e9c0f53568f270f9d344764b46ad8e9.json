{"ast":null,"code":"'use strict';\n\nvar normalize = require('./normalize.js');\nvar exact = require('./exact.js');\nvar flag = require('./flag.js');\nmodule.exports = form;\n\n// Find a known form of `value`.\nfunction form(context, value, all) {\n  var normal = value.trim();\n  var alternative;\n  if (!normal) {\n    return null;\n  }\n  normal = normalize(normal, context.conversion.in);\n  if (exact(context, normal)) {\n    if (!all && flag(context.flags, 'FORBIDDENWORD', context.data[normal])) {\n      return null;\n    }\n    return normal;\n  }\n\n  // Try sentence case if the value is uppercase.\n  if (normal.toUpperCase() === normal) {\n    alternative = normal.charAt(0) + normal.slice(1).toLowerCase();\n    if (ignore(context.flags, context.data[alternative], all)) {\n      return null;\n    }\n    if (exact(context, alternative)) {\n      return alternative;\n    }\n  }\n\n  // Try lowercase.\n  alternative = normal.toLowerCase();\n  if (alternative !== normal) {\n    if (ignore(context.flags, context.data[alternative], all)) {\n      return null;\n    }\n    if (exact(context, alternative)) {\n      return alternative;\n    }\n  }\n  return null;\n}\nfunction ignore(flags, dict, all) {\n  return flag(flags, 'KEEPCASE', dict) || all || flag(flags, 'FORBIDDENWORD', dict);\n}","map":{"version":3,"names":["normalize","require","exact","flag","module","exports","form","context","value","all","normal","trim","alternative","conversion","in","flags","data","toUpperCase","charAt","slice","toLowerCase","ignore","dict"],"sources":["C:/Users/khush/OneDrive/Desktop/new changes code/frontend1/node_modules/nspell/lib/util/form.js"],"sourcesContent":["'use strict'\n\nvar normalize = require('./normalize.js')\nvar exact = require('./exact.js')\nvar flag = require('./flag.js')\n\nmodule.exports = form\n\n// Find a known form of `value`.\nfunction form(context, value, all) {\n  var normal = value.trim()\n  var alternative\n\n  if (!normal) {\n    return null\n  }\n\n  normal = normalize(normal, context.conversion.in)\n\n  if (exact(context, normal)) {\n    if (!all && flag(context.flags, 'FORBIDDENWORD', context.data[normal])) {\n      return null\n    }\n\n    return normal\n  }\n\n  // Try sentence case if the value is uppercase.\n  if (normal.toUpperCase() === normal) {\n    alternative = normal.charAt(0) + normal.slice(1).toLowerCase()\n\n    if (ignore(context.flags, context.data[alternative], all)) {\n      return null\n    }\n\n    if (exact(context, alternative)) {\n      return alternative\n    }\n  }\n\n  // Try lowercase.\n  alternative = normal.toLowerCase()\n\n  if (alternative !== normal) {\n    if (ignore(context.flags, context.data[alternative], all)) {\n      return null\n    }\n\n    if (exact(context, alternative)) {\n      return alternative\n    }\n  }\n\n  return null\n}\n\nfunction ignore(flags, dict, all) {\n  return (\n    flag(flags, 'KEEPCASE', dict) || all || flag(flags, 'FORBIDDENWORD', dict)\n  )\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,SAAS,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACzC,IAAIC,KAAK,GAAGD,OAAO,CAAC,YAAY,CAAC;AACjC,IAAIE,IAAI,GAAGF,OAAO,CAAC,WAAW,CAAC;AAE/BG,MAAM,CAACC,OAAO,GAAGC,IAAI;;AAErB;AACA,SAASA,IAAIA,CAACC,OAAO,EAAEC,KAAK,EAAEC,GAAG,EAAE;EACjC,IAAIC,MAAM,GAAGF,KAAK,CAACG,IAAI,CAAC,CAAC;EACzB,IAAIC,WAAW;EAEf,IAAI,CAACF,MAAM,EAAE;IACX,OAAO,IAAI;EACb;EAEAA,MAAM,GAAGV,SAAS,CAACU,MAAM,EAAEH,OAAO,CAACM,UAAU,CAACC,EAAE,CAAC;EAEjD,IAAIZ,KAAK,CAACK,OAAO,EAAEG,MAAM,CAAC,EAAE;IAC1B,IAAI,CAACD,GAAG,IAAIN,IAAI,CAACI,OAAO,CAACQ,KAAK,EAAE,eAAe,EAAER,OAAO,CAACS,IAAI,CAACN,MAAM,CAAC,CAAC,EAAE;MACtE,OAAO,IAAI;IACb;IAEA,OAAOA,MAAM;EACf;;EAEA;EACA,IAAIA,MAAM,CAACO,WAAW,CAAC,CAAC,KAAKP,MAAM,EAAE;IACnCE,WAAW,GAAGF,MAAM,CAACQ,MAAM,CAAC,CAAC,CAAC,GAAGR,MAAM,CAACS,KAAK,CAAC,CAAC,CAAC,CAACC,WAAW,CAAC,CAAC;IAE9D,IAAIC,MAAM,CAACd,OAAO,CAACQ,KAAK,EAAER,OAAO,CAACS,IAAI,CAACJ,WAAW,CAAC,EAAEH,GAAG,CAAC,EAAE;MACzD,OAAO,IAAI;IACb;IAEA,IAAIP,KAAK,CAACK,OAAO,EAAEK,WAAW,CAAC,EAAE;MAC/B,OAAOA,WAAW;IACpB;EACF;;EAEA;EACAA,WAAW,GAAGF,MAAM,CAACU,WAAW,CAAC,CAAC;EAElC,IAAIR,WAAW,KAAKF,MAAM,EAAE;IAC1B,IAAIW,MAAM,CAACd,OAAO,CAACQ,KAAK,EAAER,OAAO,CAACS,IAAI,CAACJ,WAAW,CAAC,EAAEH,GAAG,CAAC,EAAE;MACzD,OAAO,IAAI;IACb;IAEA,IAAIP,KAAK,CAACK,OAAO,EAAEK,WAAW,CAAC,EAAE;MAC/B,OAAOA,WAAW;IACpB;EACF;EAEA,OAAO,IAAI;AACb;AAEA,SAASS,MAAMA,CAACN,KAAK,EAAEO,IAAI,EAAEb,GAAG,EAAE;EAChC,OACEN,IAAI,CAACY,KAAK,EAAE,UAAU,EAAEO,IAAI,CAAC,IAAIb,GAAG,IAAIN,IAAI,CAACY,KAAK,EAAE,eAAe,EAAEO,IAAI,CAAC;AAE9E","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
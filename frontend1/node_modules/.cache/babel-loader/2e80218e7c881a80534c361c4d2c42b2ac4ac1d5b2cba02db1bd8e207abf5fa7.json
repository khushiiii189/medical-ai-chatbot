{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khush\\\\OneDrive\\\\Desktop\\\\new changes code\\\\frontend1\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Recorder from \"recorder-js\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst backendUrl = \"http://localhost:5000\";\nconst MedicalChatbot = () => {\n  _s();\n  const [conversation, setConversation] = useState([]);\n  const [diagnosis, setDiagnosis] = useState(\"\");\n  const [keySymptoms, setKeySymptoms] = useState(\"\");\n  const [followUps, setFollowUps] = useState(\"\");\n  const [recommendations, setRecommendations] = useState(\"\");\n  const [displayFollowUps, setDisplayFollowUps] = useState(\"\");\n  const [displayRecommendations, setDisplayRecommendations] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [displayedDiagnosis, setDisplayedDiagnosis] = useState(\"\");\n  const [displayedSymptoms, setDisplayedSymptoms] = useState(\"\");\n  const [hasPrintedDiagnosis, setHasPrintedDiagnosis] = useState(false);\n  const audioContextRef = useRef(null);\n  const recorderRef = useRef(null);\n  const silenceTimer = useRef(null);\n  const speechRef = useRef(null);\n  const fullDiagnosisRef = useRef(\"\");\n  const followUpsRef = useRef(\"\");\n  const recommendationsRef = useRef(\"\");\n  const keySymptomsRef = useRef(\"\");\n\n  // Speak and type out diagnosis + symptoms once\n  useEffect(() => {\n    if (!hasPrintedDiagnosis && keySymptoms && diagnosis) {\n      speakAndRevealText(keySymptoms, setDisplayedSymptoms, () => {\n        speakAndRevealText(diagnosis, setDisplayedDiagnosis);\n      });\n      setHasPrintedDiagnosis(true);\n    }\n  }, [keySymptoms, diagnosis, hasPrintedDiagnosis]);\n  const speakAndRevealText = (text, setter, onComplete) => {\n    if (!text) return;\n    let index = 0;\n    setter(\"\");\n    if (speechRef.current) window.speechSynthesis.cancel();\n    const speech = new SpeechSynthesisUtterance();\n    speech.lang = \"en-US\";\n    speech.rate = 1;\n    speech.pitch = 1;\n    speechRef.current = speech;\n    const interval = setInterval(() => {\n      if (index < text.length) {\n        const char = text[index];\n        setter(prev => prev + char);\n        speech.text += char;\n        index++;\n      } else {\n        clearInterval(interval);\n        window.speechSynthesis.speak(speech);\n        if (onComplete) onComplete();\n      }\n    }, 30);\n  };\n  const handleStartRecording = async () => {\n    setError(null);\n    setIsRecording(true);\n    setHasPrintedDiagnosis(false);\n    try {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      recorderRef.current = new Recorder(audioContextRef.current);\n      recorderRef.current.init(stream);\n      recorderRef.current.start();\n      const audioInput = audioContextRef.current.createMediaStreamSource(stream);\n      const analyser = audioContextRef.current.createAnalyser();\n      audioInput.connect(analyser);\n      const checkSilence = () => {\n        const buffer = new Float32Array(analyser.fftSize);\n        analyser.getFloatTimeDomainData(buffer);\n        const maxAmplitude = Math.max(...buffer.map(Math.abs));\n        if (maxAmplitude < 0.01) {\n          if (!silenceTimer.current) {\n            silenceTimer.current = setTimeout(() => handleStopRecording(), 1500);\n          }\n        } else {\n          clearTimeout(silenceTimer.current);\n          silenceTimer.current = null;\n        }\n        requestAnimationFrame(checkSilence);\n      };\n      checkSilence();\n    } catch (error) {\n      setError(\"Microphone access denied or not available.\");\n      setIsRecording(false);\n    }\n  };\n  const handleStopRecording = async () => {\n    setIsRecording(false);\n    setIsProcessing(true);\n    clearTimeout(silenceTimer.current);\n    try {\n      const {\n        blob\n      } = await recorderRef.current.stop();\n      const audioFile = new File([blob], \"latest_audio.wav\", {\n        type: \"audio/wav\"\n      });\n      const formData = new FormData();\n      formData.append(\"file\", audioFile);\n      const transcriptionResponse = await fetch(`${backendUrl}/transcribe`, {\n        method: \"POST\",\n        body: formData\n      });\n      const transcriptionData = await transcriptionResponse.json();\n      if (transcriptionData.error) throw new Error(transcriptionData.error);\n      setConversation([{\n        role: \"AI\",\n        text: `Transcribed Text: ${transcriptionData.transcription}`\n      }]);\n      const analysisResponse = await fetch(`${backendUrl}/analyze`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: transcriptionData.transcription\n        })\n      });\n      const analysisData = await analysisResponse.json();\n      const result = cleanText(analysisData.analysis);\n      keySymptomsRef.current = extractSection(result, \"Key Symptoms Identified\") || \"No key symptoms mentioned.\";\n      fullDiagnosisRef.current = extractSection(result, \"Possible Medical Diagnosis\") || \"Diagnosis pending further details.\";\n      followUpsRef.current = extractSection(result, \"Follow-up Questions for Further Diagnosis\") || \"No follow-up questions provided.\";\n      recommendationsRef.current = extractSection(result, \"Recommended Next Steps\") || \"No recommendations provided.\";\n      setKeySymptoms(keySymptomsRef.current);\n      setDiagnosis(fullDiagnosisRef.current);\n    } catch (err) {\n      setError(\"Server error: \" + err.message);\n    }\n    setIsProcessing(false);\n  };\n  const extractSection = (text, label) => {\n    const regex = new RegExp(`\\\\*\\\\*${label}:\\\\*\\\\*\\\\s*([\\\\s\\\\S]*?)(?=\\\\n\\\\*\\\\*|$)`, \"m\");\n    const match = text.match(regex);\n    return match && match[1] ? match[1].trim() : null;\n  };\n  const cleanText = text => {\n    return (text || \"\").replace(/undefined/g, \"\").replace(/\\bDiaanosis\\b/gi, \"Diagnosis\").replace(/\\bFFaattiigguuee\\b/gi, \"Fatigue\").replace(/\\s+/g, \" \").trim();\n  };\n  const handleFollowUpsClick = () => {\n    speakAndRevealText(followUpsRef.current, setDisplayFollowUps);\n  };\n  const handleRecommendationsClick = () => {\n    speakAndRevealText(recommendationsRef.current, setDisplayRecommendations);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Medical AI Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.role, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 180,\n          columnNumber: 13\n        }, this), msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), (keySymptoms || diagnosis) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diagnosis-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Diagnosis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Key Symptoms Identified:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 14\n        }, this), \" \", displayedSymptoms]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Possible Medical Diagnosis:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: displayedDiagnosis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFollowUpsClick,\n        children: \"Show Follow-up Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRecommendationsClick,\n        children: \"Show Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 11\n      }, this), displayFollowUps && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Follow-up Questions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: displayFollowUps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 194,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 32\n      }, this), displayRecommendations && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Recommendations:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: displayRecommendations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 68\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, this), !isRecording && !isProcessing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartRecording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 9\n    }, this), isRecording && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83C\\uDF99\\uFE0F Listening... Speak now.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 173,\n    columnNumber: 5\n  }, this);\n};\n_s(MedicalChatbot, \"6Hb8rAp5LAjOKXxYLwyFT3AN4B8=\");\n_c = MedicalChatbot;\nexport default MedicalChatbot;\nvar _c;\n$RefreshReg$(_c, \"MedicalChatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Recorder","jsxDEV","_jsxDEV","backendUrl","MedicalChatbot","_s","conversation","setConversation","diagnosis","setDiagnosis","keySymptoms","setKeySymptoms","followUps","setFollowUps","recommendations","setRecommendations","displayFollowUps","setDisplayFollowUps","displayRecommendations","setDisplayRecommendations","error","setError","isRecording","setIsRecording","isProcessing","setIsProcessing","displayedDiagnosis","setDisplayedDiagnosis","displayedSymptoms","setDisplayedSymptoms","hasPrintedDiagnosis","setHasPrintedDiagnosis","audioContextRef","recorderRef","silenceTimer","speechRef","fullDiagnosisRef","followUpsRef","recommendationsRef","keySymptomsRef","speakAndRevealText","text","setter","onComplete","index","current","window","speechSynthesis","cancel","speech","SpeechSynthesisUtterance","lang","rate","pitch","interval","setInterval","length","char","prev","clearInterval","speak","handleStartRecording","AudioContext","webkitAudioContext","stream","navigator","mediaDevices","getUserMedia","audio","init","start","audioInput","createMediaStreamSource","analyser","createAnalyser","connect","checkSilence","buffer","Float32Array","fftSize","getFloatTimeDomainData","maxAmplitude","Math","max","map","abs","setTimeout","handleStopRecording","clearTimeout","requestAnimationFrame","blob","stop","audioFile","File","type","formData","FormData","append","transcriptionResponse","fetch","method","body","transcriptionData","json","Error","role","transcription","analysisResponse","headers","JSON","stringify","analysisData","result","cleanText","analysis","extractSection","err","message","label","regex","RegExp","match","trim","replace","handleFollowUpsClick","handleRecommendationsClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","msg","onClick","_c","$RefreshReg$"],"sources":["C:/Users/khush/OneDrive/Desktop/new changes code/frontend1/src/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport Recorder from \"recorder-js\";\r\nimport \"./Chatbot.css\";\r\n\r\nconst backendUrl = \"http://localhost:5000\";\r\n\r\nconst MedicalChatbot = () => {\r\n  const [conversation, setConversation] = useState([]);\r\n  const [diagnosis, setDiagnosis] = useState(\"\");\r\n  const [keySymptoms, setKeySymptoms] = useState(\"\");\r\n  const [followUps, setFollowUps] = useState(\"\");\r\n  const [recommendations, setRecommendations] = useState(\"\");\r\n  const [displayFollowUps, setDisplayFollowUps] = useState(\"\");\r\n  const [displayRecommendations, setDisplayRecommendations] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [displayedDiagnosis, setDisplayedDiagnosis] = useState(\"\");\r\n  const [displayedSymptoms, setDisplayedSymptoms] = useState(\"\");\r\n  const [hasPrintedDiagnosis, setHasPrintedDiagnosis] = useState(false);\r\n\r\n  const audioContextRef = useRef(null);\r\n  const recorderRef = useRef(null);\r\n  const silenceTimer = useRef(null);\r\n  const speechRef = useRef(null);\r\n  const fullDiagnosisRef = useRef(\"\");\r\n  const followUpsRef = useRef(\"\");\r\n  const recommendationsRef = useRef(\"\");\r\n  const keySymptomsRef = useRef(\"\");\r\n\r\n  // Speak and type out diagnosis + symptoms once\r\n  useEffect(() => {\r\n    if (!hasPrintedDiagnosis && keySymptoms && diagnosis) {\r\n      speakAndRevealText(keySymptoms, setDisplayedSymptoms, () => {\r\n        speakAndRevealText(diagnosis, setDisplayedDiagnosis);\r\n      });\r\n      setHasPrintedDiagnosis(true);\r\n    }\r\n  }, [keySymptoms, diagnosis, hasPrintedDiagnosis]);\r\n\r\n  const speakAndRevealText = (text, setter, onComplete) => {\r\n    if (!text) return;\r\n    let index = 0;\r\n    setter(\"\");\r\n    if (speechRef.current) window.speechSynthesis.cancel();\r\n    const speech = new SpeechSynthesisUtterance();\r\n    speech.lang = \"en-US\";\r\n    speech.rate = 1;\r\n    speech.pitch = 1;\r\n    speechRef.current = speech;\r\n\r\n    const interval = setInterval(() => {\r\n      if (index < text.length) {\r\n        const char = text[index];\r\n        setter((prev) => prev + char);\r\n        speech.text += char;\r\n        index++;\r\n      } else {\r\n        clearInterval(interval);\r\n        window.speechSynthesis.speak(speech);\r\n        if (onComplete) onComplete();\r\n      }\r\n    }, 30);\r\n  };\r\n\r\n  const handleStartRecording = async () => {\r\n    setError(null);\r\n    setIsRecording(true);\r\n    setHasPrintedDiagnosis(false);\r\n\r\n    try {\r\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      recorderRef.current = new Recorder(audioContextRef.current);\r\n      recorderRef.current.init(stream);\r\n      recorderRef.current.start();\r\n\r\n      const audioInput = audioContextRef.current.createMediaStreamSource(stream);\r\n      const analyser = audioContextRef.current.createAnalyser();\r\n      audioInput.connect(analyser);\r\n\r\n      const checkSilence = () => {\r\n        const buffer = new Float32Array(analyser.fftSize);\r\n        analyser.getFloatTimeDomainData(buffer);\r\n        const maxAmplitude = Math.max(...buffer.map(Math.abs));\r\n\r\n        if (maxAmplitude < 0.01) {\r\n          if (!silenceTimer.current) {\r\n            silenceTimer.current = setTimeout(() => handleStopRecording(), 1500);\r\n          }\r\n        } else {\r\n          clearTimeout(silenceTimer.current);\r\n          silenceTimer.current = null;\r\n        }\r\n        requestAnimationFrame(checkSilence);\r\n      };\r\n\r\n      checkSilence();\r\n    } catch (error) {\r\n      setError(\"Microphone access denied or not available.\");\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  const handleStopRecording = async () => {\r\n    setIsRecording(false);\r\n    setIsProcessing(true);\r\n    clearTimeout(silenceTimer.current);\r\n\r\n    try {\r\n      const { blob } = await recorderRef.current.stop();\r\n      const audioFile = new File([blob], \"latest_audio.wav\", { type: \"audio/wav\" });\r\n      const formData = new FormData();\r\n      formData.append(\"file\", audioFile);\r\n\r\n      const transcriptionResponse = await fetch(`${backendUrl}/transcribe`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const transcriptionData = await transcriptionResponse.json();\r\n      if (transcriptionData.error) throw new Error(transcriptionData.error);\r\n\r\n      setConversation([{ role: \"AI\", text: `Transcribed Text: ${transcriptionData.transcription}` }]);\r\n\r\n      const analysisResponse = await fetch(`${backendUrl}/analyze`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ text: transcriptionData.transcription }),\r\n      });\r\n\r\n      const analysisData = await analysisResponse.json();\r\n      const result = cleanText(analysisData.analysis);\r\n\r\n      keySymptomsRef.current = extractSection(result, \"Key Symptoms Identified\") || \"No key symptoms mentioned.\";\r\n      fullDiagnosisRef.current = extractSection(result, \"Possible Medical Diagnosis\") || \"Diagnosis pending further details.\";\r\n      followUpsRef.current = extractSection(result, \"Follow-up Questions for Further Diagnosis\") || \"No follow-up questions provided.\";\r\n      recommendationsRef.current = extractSection(result, \"Recommended Next Steps\") || \"No recommendations provided.\";\r\n\r\n      setKeySymptoms(keySymptomsRef.current);\r\n      setDiagnosis(fullDiagnosisRef.current);\r\n    } catch (err) {\r\n      setError(\"Server error: \" + err.message);\r\n    }\r\n\r\n    setIsProcessing(false);\r\n  };\r\n\r\n  const extractSection = (text, label) => {\r\n    const regex = new RegExp(`\\\\*\\\\*${label}:\\\\*\\\\*\\\\s*([\\\\s\\\\S]*?)(?=\\\\n\\\\*\\\\*|$)`, \"m\");\r\n    const match = text.match(regex);\r\n    return match && match[1] ? match[1].trim() : null;\r\n  };\r\n\r\n  const cleanText = (text) => {\r\n    return (text || \"\")\r\n      .replace(/undefined/g, \"\")\r\n      .replace(/\\bDiaanosis\\b/gi, \"Diagnosis\")\r\n      .replace(/\\bFFaattiigguuee\\b/gi, \"Fatigue\")\r\n      .replace(/\\s+/g, \" \")\r\n      .trim();\r\n  };\r\n\r\n  const handleFollowUpsClick = () => {\r\n    speakAndRevealText(followUpsRef.current, setDisplayFollowUps);\r\n  };\r\n\r\n  const handleRecommendationsClick = () => {\r\n    speakAndRevealText(recommendationsRef.current, setDisplayRecommendations);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <h1>Medical AI Chatbot</h1>\r\n      {error && <p className=\"error-message\">Error: {error}</p>}\r\n\r\n      <div className=\"chatbox\">\r\n        {conversation.map((msg, index) => (\r\n          <div key={index} className=\"message\">\r\n            <strong>{msg.role}: </strong>{msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {(keySymptoms || diagnosis) && (\r\n        <div className=\"diagnosis-box\">\r\n          <h2>Diagnosis</h2>\r\n          <p><strong>Key Symptoms Identified:</strong> {displayedSymptoms}</p>\r\n          <p><strong>Possible Medical Diagnosis:</strong></p>\r\n          <p>{displayedDiagnosis}</p>\r\n          <br />\r\n          <button onClick={handleFollowUpsClick}>Show Follow-up Questions</button>\r\n          <button onClick={handleRecommendationsClick}>Show Recommendations</button>\r\n          {displayFollowUps && <div><h4>Follow-up Questions:</h4><p>{displayFollowUps}</p></div>}\r\n          {displayRecommendations && <div><h4>Recommendations:</h4><p>{displayRecommendations}</p></div>}\r\n        </div>\r\n      )}\r\n\r\n      {!isRecording && !isProcessing && (\r\n        <button onClick={handleStartRecording}>Start Recording</button>\r\n      )}\r\n\r\n      {isRecording && <p>🎙️ Listening... Speak now.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicalChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nvar _microphone = require('./microphone');\nvar _microphone2 = _interopRequireDefault(_microphone);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar defaultConfig = {\n  nFrequencyBars: 255,\n  onAnalysed: null\n};\nvar Recorder = function () {\n  function Recorder(audioContext) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    _classCallCheck(this, Recorder);\n    this.config = Object.assign({}, defaultConfig, config);\n    this.audioContext = audioContext;\n    this.audioInput = null;\n    this.realAudioInput = null;\n    this.inputPoint = null;\n    this.audioRecorder = null;\n    this.rafID = null;\n    this.analyserContext = null;\n    this.recIndex = 0;\n    this.stream = null;\n    this.updateAnalysers = this.updateAnalysers.bind(this);\n  }\n  _createClass(Recorder, [{\n    key: 'init',\n    value: function init(stream) {\n      var _this = this;\n      return new Promise(function (resolve) {\n        _this.inputPoint = _this.audioContext.createGain();\n        _this.stream = stream;\n        _this.realAudioInput = _this.audioContext.createMediaStreamSource(stream);\n        _this.audioInput = _this.realAudioInput;\n        _this.audioInput.connect(_this.inputPoint);\n        _this.analyserNode = _this.audioContext.createAnalyser();\n        _this.analyserNode.fftSize = 2048;\n        _this.inputPoint.connect(_this.analyserNode);\n        _this.audioRecorder = new _microphone2.default(_this.inputPoint);\n        var zeroGain = _this.audioContext.createGain();\n        zeroGain.gain.value = 0.0;\n        _this.inputPoint.connect(zeroGain);\n        zeroGain.connect(_this.audioContext.destination);\n        _this.updateAnalysers();\n        resolve();\n      });\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n      return new Promise(function (resolve, reject) {\n        if (!_this2.audioRecorder) {\n          reject('Not currently recording');\n          return;\n        }\n        _this2.audioRecorder.clear();\n        _this2.audioRecorder.record();\n        resolve(_this2.stream);\n      });\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var _this3 = this;\n      return new Promise(function (resolve) {\n        _this3.audioRecorder.stop();\n        _this3.audioRecorder.getBuffer(function (buffer) {\n          _this3.audioRecorder.exportWAV(function (blob) {\n            return resolve({\n              buffer: buffer,\n              blob: blob\n            });\n          });\n        });\n      });\n    }\n  }, {\n    key: 'updateAnalysers',\n    value: function updateAnalysers() {\n      if (this.config.onAnalysed) {\n        requestAnimationFrame(this.updateAnalysers);\n        var freqByteData = new Uint8Array(this.analyserNode.frequencyBinCount);\n        this.analyserNode.getByteFrequencyData(freqByteData);\n        var data = new Array(255);\n        var lastNonZero = 0;\n        var datum = void 0;\n        for (var idx = 0; idx < 255; idx += 1) {\n          datum = Math.floor(freqByteData[idx]) - Math.floor(freqByteData[idx]) % 5;\n          if (datum !== 0) {\n            lastNonZero = idx;\n          }\n          data[idx] = datum;\n        }\n        this.config.onAnalysed({\n          data: data,\n          lineTo: lastNonZero\n        });\n      }\n    }\n  }, {\n    key: 'setOnAnalysed',\n    value: function setOnAnalysed(handler) {\n      this.config.onAnalysed = handler;\n    }\n  }]);\n  return Recorder;\n}();\nRecorder.download = function download(blob) {\n  var filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'audio';\n  _microphone2.default.forceDownload(blob, filename + '.wav');\n};\nexports.default = Recorder;","map":{"version":3,"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_microphone","require","_microphone2","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","TypeError","defaultConfig","nFrequencyBars","onAnalysed","Recorder","audioContext","config","arguments","undefined","assign","audioInput","realAudioInput","inputPoint","audioRecorder","rafID","analyserContext","recIndex","stream","updateAnalysers","bind","init","_this","Promise","resolve","createGain","createMediaStreamSource","connect","analyserNode","createAnalyser","fftSize","zeroGain","gain","destination","start","_this2","reject","clear","record","stop","_this3","getBuffer","buffer","exportWAV","blob","requestAnimationFrame","freqByteData","Uint8Array","frequencyBinCount","getByteFrequencyData","data","Array","lastNonZero","datum","idx","Math","floor","lineTo","setOnAnalysed","handler","download","filename","forceDownload"],"sources":["C:/Users/khush/OneDrive/Desktop/frontend1/node_modules/recorder-js/lib/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _microphone = require('./microphone');\n\nvar _microphone2 = _interopRequireDefault(_microphone);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar defaultConfig = {\n  nFrequencyBars: 255,\n  onAnalysed: null\n};\n\nvar Recorder = function () {\n  function Recorder(audioContext) {\n    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    _classCallCheck(this, Recorder);\n\n    this.config = Object.assign({}, defaultConfig, config);\n\n    this.audioContext = audioContext;\n    this.audioInput = null;\n    this.realAudioInput = null;\n    this.inputPoint = null;\n    this.audioRecorder = null;\n    this.rafID = null;\n    this.analyserContext = null;\n    this.recIndex = 0;\n    this.stream = null;\n\n    this.updateAnalysers = this.updateAnalysers.bind(this);\n  }\n\n  _createClass(Recorder, [{\n    key: 'init',\n    value: function init(stream) {\n      var _this = this;\n\n      return new Promise(function (resolve) {\n        _this.inputPoint = _this.audioContext.createGain();\n\n        _this.stream = stream;\n\n        _this.realAudioInput = _this.audioContext.createMediaStreamSource(stream);\n        _this.audioInput = _this.realAudioInput;\n        _this.audioInput.connect(_this.inputPoint);\n\n        _this.analyserNode = _this.audioContext.createAnalyser();\n        _this.analyserNode.fftSize = 2048;\n        _this.inputPoint.connect(_this.analyserNode);\n\n        _this.audioRecorder = new _microphone2.default(_this.inputPoint);\n\n        var zeroGain = _this.audioContext.createGain();\n        zeroGain.gain.value = 0.0;\n\n        _this.inputPoint.connect(zeroGain);\n        zeroGain.connect(_this.audioContext.destination);\n\n        _this.updateAnalysers();\n\n        resolve();\n      });\n    }\n  }, {\n    key: 'start',\n    value: function start() {\n      var _this2 = this;\n\n      return new Promise(function (resolve, reject) {\n        if (!_this2.audioRecorder) {\n          reject('Not currently recording');\n          return;\n        }\n\n        _this2.audioRecorder.clear();\n        _this2.audioRecorder.record();\n\n        resolve(_this2.stream);\n      });\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var _this3 = this;\n\n      return new Promise(function (resolve) {\n        _this3.audioRecorder.stop();\n\n        _this3.audioRecorder.getBuffer(function (buffer) {\n          _this3.audioRecorder.exportWAV(function (blob) {\n            return resolve({ buffer: buffer, blob: blob });\n          });\n        });\n      });\n    }\n  }, {\n    key: 'updateAnalysers',\n    value: function updateAnalysers() {\n      if (this.config.onAnalysed) {\n        requestAnimationFrame(this.updateAnalysers);\n\n        var freqByteData = new Uint8Array(this.analyserNode.frequencyBinCount);\n\n        this.analyserNode.getByteFrequencyData(freqByteData);\n\n        var data = new Array(255);\n        var lastNonZero = 0;\n        var datum = void 0;\n\n        for (var idx = 0; idx < 255; idx += 1) {\n          datum = Math.floor(freqByteData[idx]) - Math.floor(freqByteData[idx]) % 5;\n\n          if (datum !== 0) {\n            lastNonZero = idx;\n          }\n\n          data[idx] = datum;\n        }\n\n        this.config.onAnalysed({ data: data, lineTo: lastNonZero });\n      }\n    }\n  }, {\n    key: 'setOnAnalysed',\n    value: function setOnAnalysed(handler) {\n      this.config.onAnalysed = handler;\n    }\n  }]);\n\n  return Recorder;\n}();\n\nRecorder.download = function download(blob) {\n  var filename = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'audio';\n\n  _microphone2.default.forceDownload(blob, filename + '.wav');\n};\n\nexports.default = Recorder;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
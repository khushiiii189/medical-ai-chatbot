{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khush\\\\OneDrive\\\\Desktop\\\\new changes code\\\\frontend1\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Recorder from \"recorder-js\";\nimport \"./Chatbot.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst backendUrl = \"http://localhost:5000\";\nconst MedicalChatbot = () => {\n  _s();\n  const [conversation, setConversation] = useState([]);\n  const [diagnosis, setDiagnosis] = useState(\"\");\n  const [keySymptoms, setKeySymptoms] = useState(\"\");\n  const [followUps, setFollowUps] = useState(\"\");\n  const [recommendations, setRecommendations] = useState(\"\");\n  const [displayFollowUps, setDisplayFollowUps] = useState(\"\");\n  const [displayRecommendations, setDisplayRecommendations] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [displayedDiagnosis, setDisplayedDiagnosis] = useState(\"\");\n  const [isDiagnosisFinal, setIsDiagnosisFinal] = useState(false);\n  const audioContextRef = useRef(null);\n  const recorderRef = useRef(null);\n  const silenceTimer = useRef(null);\n  const speechRef = useRef(null);\n  const fullDiagnosisRef = useRef(\"\");\n  const followUpsRef = useRef(\"\");\n  const recommendationsRef = useRef(\"\");\n  const keySymptomsRef = useRef(\"\");\n  useEffect(() => {\n    if (fullDiagnosisRef.current && !isDiagnosisFinal) {\n      revealText(fullDiagnosisRef.current, setDisplayedDiagnosis);\n      setIsDiagnosisFinal(true);\n    }\n  }, [diagnosis, isDiagnosisFinal]);\n  const revealText = (text, setter) => {\n    let index = 0;\n    setter(\"\"); // Clear current text\n    const interval = setInterval(() => {\n      setter(prev => prev + text[index]);\n      index++;\n      if (index >= text.length) clearInterval(interval);\n    }, 30);\n  };\n  const handleStartRecording = async () => {\n    setError(null);\n    setIsDiagnosisFinal(false); // reset for new diagnosis\n    setIsRecording(true);\n    try {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      recorderRef.current = new Recorder(audioContextRef.current);\n      recorderRef.current.init(stream);\n      recorderRef.current.start();\n      const audioInput = audioContextRef.current.createMediaStreamSource(stream);\n      const analyser = audioContextRef.current.createAnalyser();\n      audioInput.connect(analyser);\n      const checkSilence = () => {\n        const buffer = new Float32Array(analyser.fftSize);\n        analyser.getFloatTimeDomainData(buffer);\n        const maxAmplitude = Math.max(...buffer.map(Math.abs));\n        if (maxAmplitude < 0.01) {\n          if (!silenceTimer.current) {\n            silenceTimer.current = setTimeout(() => handleStopRecording(), 1500);\n          }\n        } else {\n          clearTimeout(silenceTimer.current);\n          silenceTimer.current = null;\n        }\n        requestAnimationFrame(checkSilence);\n      };\n      checkSilence();\n    } catch (error) {\n      setError(\"Microphone access denied or not available.\");\n      setIsRecording(false);\n    }\n  };\n  const handleStopRecording = async () => {\n    setIsRecording(false);\n    setIsProcessing(true);\n    clearTimeout(silenceTimer.current);\n    try {\n      const {\n        blob\n      } = await recorderRef.current.stop();\n      const audioFile = new File([blob], \"audio.wav\", {\n        type: \"audio/wav\"\n      });\n      const formData = new FormData();\n      formData.append(\"file\", audioFile);\n      const transcriptionResponse = await fetch(`${backendUrl}/transcribe`, {\n        method: \"POST\",\n        body: formData\n      });\n      const transcriptionData = await transcriptionResponse.json();\n      if (transcriptionData.error) {\n        setError(transcriptionData.error);\n        setIsProcessing(false);\n        return;\n      }\n      setConversation([{\n        role: \"AI\",\n        text: `Transcribed Text: ${transcriptionData.transcription}`\n      }]);\n      const analysisResponse = await fetch(`${backendUrl}/analyze`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: transcriptionData.transcription\n        })\n      });\n      const analysisData = await analysisResponse.json();\n      const result = analysisData.analysis;\n      fullDiagnosisRef.current = extractSection(result, \"Possible Medical Diagnosis\") || \"Diagnosis pending further details.\";\n      followUpsRef.current = extractSection(result, \"Follow-up Questions for Further Diagnosis\") || \"\";\n      recommendationsRef.current = extractSection(result, \"Recommended Next Steps\") || \"\";\n      keySymptomsRef.current = extractSection(result, \"Key Symptoms Identified\") || \"\";\n      setDiagnosis(fullDiagnosisRef.current);\n      setKeySymptoms(keySymptomsRef.current);\n    } catch (error) {\n      setError(\"Error processing the audio.\");\n    }\n    setIsProcessing(false);\n  };\n  const extractSection = (text, label) => {\n    const safeLabel = label.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    const regex = new RegExp(`\\\\*\\\\*${safeLabel}:\\\\*\\\\*\\\\s*([\\\\s\\\\S]*?)(?=\\\\n\\\\*\\\\*|$)`, 'm');\n    const match = text.match(regex);\n    return match && match[1] ? match[1].trim().replace(/undefined/g, \"\").trim() : null;\n  };\n  const speakText = text => {\n    if (speechRef.current) window.speechSynthesis.cancel();\n    const speech = new SpeechSynthesisUtterance(text);\n    speech.lang = \"en-US\";\n    speech.rate = 1;\n    speech.pitch = 1;\n    speechRef.current = speech;\n    window.speechSynthesis.speak(speech);\n  };\n  const handleFollowUpsClick = () => {\n    revealText(followUpsRef.current, setDisplayFollowUps);\n    speakText(followUpsRef.current);\n  };\n  const handleRecommendationsClick = () => {\n    revealText(recommendationsRef.current, setDisplayRecommendations);\n    speakText(recommendationsRef.current);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Medical AI Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.role, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this), msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), (keySymptoms || diagnosis) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diagnosis-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Diagnosis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 11\n      }, this), keySymptoms && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Key Symptoms Identified:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 30\n        }, this), \" \", keySymptoms]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 27\n      }, this), displayedDiagnosis && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Possible Medical Diagnosis:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 18\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: displayedDiagnosis\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFollowUpsClick,\n        children: \"Show Follow-up Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRecommendationsClick,\n        children: \"Show Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, this), displayFollowUps && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Follow-up Questions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: displayFollowUps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 32\n      }, this), displayRecommendations && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Recommendations:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: displayRecommendations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 189,\n          columnNumber: 68\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 9\n    }, this), !isRecording && !isProcessing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartRecording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 9\n    }, this), isRecording && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83C\\uDF99\\uFE0F Listening... Speak now.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n};\n_s(MedicalChatbot, \"2w0G27gRcn+Xzo51E23PAN3NJJY=\");\n_c = MedicalChatbot;\nexport default MedicalChatbot;\nvar _c;\n$RefreshReg$(_c, \"MedicalChatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Recorder","jsxDEV","_jsxDEV","Fragment","_Fragment","backendUrl","MedicalChatbot","_s","conversation","setConversation","diagnosis","setDiagnosis","keySymptoms","setKeySymptoms","followUps","setFollowUps","recommendations","setRecommendations","displayFollowUps","setDisplayFollowUps","displayRecommendations","setDisplayRecommendations","error","setError","isRecording","setIsRecording","isProcessing","setIsProcessing","displayedDiagnosis","setDisplayedDiagnosis","isDiagnosisFinal","setIsDiagnosisFinal","audioContextRef","recorderRef","silenceTimer","speechRef","fullDiagnosisRef","followUpsRef","recommendationsRef","keySymptomsRef","current","revealText","text","setter","index","interval","setInterval","prev","length","clearInterval","handleStartRecording","window","AudioContext","webkitAudioContext","stream","navigator","mediaDevices","getUserMedia","audio","init","start","audioInput","createMediaStreamSource","analyser","createAnalyser","connect","checkSilence","buffer","Float32Array","fftSize","getFloatTimeDomainData","maxAmplitude","Math","max","map","abs","setTimeout","handleStopRecording","clearTimeout","requestAnimationFrame","blob","stop","audioFile","File","type","formData","FormData","append","transcriptionResponse","fetch","method","body","transcriptionData","json","role","transcription","analysisResponse","headers","JSON","stringify","analysisData","result","analysis","extractSection","label","safeLabel","replace","regex","RegExp","match","trim","speakText","speechSynthesis","cancel","speech","SpeechSynthesisUtterance","lang","rate","pitch","speak","handleFollowUpsClick","handleRecommendationsClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","msg","onClick","_c","$RefreshReg$"],"sources":["C:/Users/khush/OneDrive/Desktop/new changes code/frontend1/src/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport Recorder from \"recorder-js\";\r\nimport \"./Chatbot.css\";\r\n\r\nconst backendUrl = \"http://localhost:5000\";\r\n\r\nconst MedicalChatbot = () => {\r\n  const [conversation, setConversation] = useState([]);\r\n  const [diagnosis, setDiagnosis] = useState(\"\");\r\n  const [keySymptoms, setKeySymptoms] = useState(\"\");\r\n  const [followUps, setFollowUps] = useState(\"\");\r\n  const [recommendations, setRecommendations] = useState(\"\");\r\n  const [displayFollowUps, setDisplayFollowUps] = useState(\"\");\r\n  const [displayRecommendations, setDisplayRecommendations] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [displayedDiagnosis, setDisplayedDiagnosis] = useState(\"\");\r\n  const [isDiagnosisFinal, setIsDiagnosisFinal] = useState(false);\r\n\r\n  const audioContextRef = useRef(null);\r\n  const recorderRef = useRef(null);\r\n  const silenceTimer = useRef(null);\r\n  const speechRef = useRef(null);\r\n  const fullDiagnosisRef = useRef(\"\");\r\n  const followUpsRef = useRef(\"\");\r\n  const recommendationsRef = useRef(\"\");\r\n  const keySymptomsRef = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    if (fullDiagnosisRef.current && !isDiagnosisFinal) {\r\n      revealText(fullDiagnosisRef.current, setDisplayedDiagnosis);\r\n      setIsDiagnosisFinal(true);\r\n    }\r\n  }, [diagnosis, isDiagnosisFinal]);\r\n\r\n  const revealText = (text, setter) => {\r\n    let index = 0;\r\n    setter(\"\"); // Clear current text\r\n    const interval = setInterval(() => {\r\n      setter((prev) => prev + text[index]);\r\n      index++;\r\n      if (index >= text.length) clearInterval(interval);\r\n    }, 30);\r\n  };\r\n\r\n  const handleStartRecording = async () => {\r\n    setError(null);\r\n    setIsDiagnosisFinal(false); // reset for new diagnosis\r\n    setIsRecording(true);\r\n\r\n    try {\r\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      recorderRef.current = new Recorder(audioContextRef.current);\r\n      recorderRef.current.init(stream);\r\n      recorderRef.current.start();\r\n\r\n      const audioInput = audioContextRef.current.createMediaStreamSource(stream);\r\n      const analyser = audioContextRef.current.createAnalyser();\r\n      audioInput.connect(analyser);\r\n\r\n      const checkSilence = () => {\r\n        const buffer = new Float32Array(analyser.fftSize);\r\n        analyser.getFloatTimeDomainData(buffer);\r\n        const maxAmplitude = Math.max(...buffer.map(Math.abs));\r\n\r\n        if (maxAmplitude < 0.01) {\r\n          if (!silenceTimer.current) {\r\n            silenceTimer.current = setTimeout(() => handleStopRecording(), 1500);\r\n          }\r\n        } else {\r\n          clearTimeout(silenceTimer.current);\r\n          silenceTimer.current = null;\r\n        }\r\n        requestAnimationFrame(checkSilence);\r\n      };\r\n\r\n      checkSilence();\r\n    } catch (error) {\r\n      setError(\"Microphone access denied or not available.\");\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  const handleStopRecording = async () => {\r\n    setIsRecording(false);\r\n    setIsProcessing(true);\r\n    clearTimeout(silenceTimer.current);\r\n\r\n    try {\r\n      const { blob } = await recorderRef.current.stop();\r\n      const audioFile = new File([blob], \"audio.wav\", { type: \"audio/wav\" });\r\n      const formData = new FormData();\r\n      formData.append(\"file\", audioFile);\r\n\r\n      const transcriptionResponse = await fetch(`${backendUrl}/transcribe`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const transcriptionData = await transcriptionResponse.json();\r\n      if (transcriptionData.error) {\r\n        setError(transcriptionData.error);\r\n        setIsProcessing(false);\r\n        return;\r\n      }\r\n\r\n      setConversation([{ role: \"AI\", text: `Transcribed Text: ${transcriptionData.transcription}` }]);\r\n\r\n      const analysisResponse = await fetch(`${backendUrl}/analyze`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ text: transcriptionData.transcription }),\r\n      });\r\n\r\n      const analysisData = await analysisResponse.json();\r\n      const result = analysisData.analysis;\r\n\r\n      fullDiagnosisRef.current = extractSection(result, \"Possible Medical Diagnosis\") || \"Diagnosis pending further details.\";\r\n      followUpsRef.current = extractSection(result, \"Follow-up Questions for Further Diagnosis\") || \"\";\r\n      recommendationsRef.current = extractSection(result, \"Recommended Next Steps\") || \"\";\r\n      keySymptomsRef.current = extractSection(result, \"Key Symptoms Identified\") || \"\";\r\n\r\n      setDiagnosis(fullDiagnosisRef.current);\r\n      setKeySymptoms(keySymptomsRef.current);\r\n\r\n    } catch (error) {\r\n      setError(\"Error processing the audio.\");\r\n    }\r\n\r\n    setIsProcessing(false);\r\n  };\r\n\r\n  const extractSection = (text, label) => {\r\n    const safeLabel = label.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    const regex = new RegExp(`\\\\*\\\\*${safeLabel}:\\\\*\\\\*\\\\s*([\\\\s\\\\S]*?)(?=\\\\n\\\\*\\\\*|$)`, 'm');\r\n    const match = text.match(regex);\r\n    return match && match[1] ? match[1].trim().replace(/undefined/g, \"\").trim() : null;\r\n  };\r\n\r\n  const speakText = (text) => {\r\n    if (speechRef.current) window.speechSynthesis.cancel();\r\n    const speech = new SpeechSynthesisUtterance(text);\r\n    speech.lang = \"en-US\";\r\n    speech.rate = 1;\r\n    speech.pitch = 1;\r\n    speechRef.current = speech;\r\n    window.speechSynthesis.speak(speech);\r\n  };\r\n\r\n  const handleFollowUpsClick = () => {\r\n    revealText(followUpsRef.current, setDisplayFollowUps);\r\n    speakText(followUpsRef.current);\r\n  };\r\n\r\n  const handleRecommendationsClick = () => {\r\n    revealText(recommendationsRef.current, setDisplayRecommendations);\r\n    speakText(recommendationsRef.current);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <h1>Medical AI Chatbot</h1>\r\n      {error && <p className=\"error-message\">Error: {error}</p>}\r\n\r\n      <div className=\"chatbox\">\r\n        {conversation.map((msg, index) => (\r\n          <div key={index} className=\"message\">\r\n            <strong>{msg.role}: </strong>{msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {(keySymptoms || diagnosis) && (\r\n        <div className=\"diagnosis-box\">\r\n          <h2>Diagnosis</h2>\r\n          {keySymptoms && <p><strong>Key Symptoms Identified:</strong> {keySymptoms}</p>}\r\n          {displayedDiagnosis && (\r\n            <>\r\n              <p><strong>Possible Medical Diagnosis:</strong></p>\r\n              <p>{displayedDiagnosis}</p>\r\n            </>\r\n          )}\r\n          <br />\r\n          <button onClick={handleFollowUpsClick}>Show Follow-up Questions</button>\r\n          <button onClick={handleRecommendationsClick}>Show Recommendations</button>\r\n          {displayFollowUps && <div><h4>Follow-up Questions:</h4><p>{displayFollowUps}</p></div>}\r\n          {displayRecommendations && <div><h4>Recommendations:</h4><p>{displayRecommendations}</p></div>}\r\n        </div>\r\n      )}\r\n\r\n      {!isRecording && !isProcessing && (\r\n        <button onClick={handleStartRecording}>Start Recording</button>\r\n      )}\r\n\r\n      {isRecording && <p>🎙️ Listening... Speak now.</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicalChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
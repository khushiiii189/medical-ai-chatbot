{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khush\\\\OneDrive\\\\Desktop\\\\new changes code\\\\frontend1\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useRef } from \"react\";\nimport axios from \"axios\";\nimport { useLocation } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChatBot = () => {\n  _s();\n  var _location$state;\n  const location = useLocation();\n  const recordedText = ((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.recordedText) || \"\";\n  const [symptoms, setSymptoms] = useState(\"\");\n  const [diagnosis, setDiagnosis] = useState(\"\");\n  const [displayedSymptoms, setDisplayedSymptoms] = useState(\"\");\n  const [displayedDiagnosis, setDisplayedDiagnosis] = useState(\"\");\n  const speechRef = useRef(null);\n  useEffect(() => {\n    if (recordedText) {\n      analyzeSymptoms(recordedText);\n    }\n    return () => {\n      if (speechRef.current) {\n        window.speechSynthesis.cancel();\n        speechRef.current = null;\n      }\n    };\n  }, [recordedText]);\n  const analyzeSymptoms = async text => {\n    try {\n      const response = await axios.post(\"http://127.0.0.1:5000/analyze\", {\n        text\n      });\n      const cleaned = cleanText(response.data.analysis);\n      const symptomsMatch = cleaned.match(/Symptoms:\\s*(.*?)(?:\\n|$)/i);\n      const diagnosisMatch = cleaned.match(/Diagnosis:\\s*(.*?)(?:\\n|$)/i);\n      const extractedSymptoms = symptomsMatch ? symptomsMatch[1].trim() : \"\";\n      const extractedDiagnosis = diagnosisMatch ? diagnosisMatch[1].trim() : \"\";\n      setSymptoms(extractedSymptoms);\n      setDiagnosis(extractedDiagnosis);\n    } catch (error) {\n      console.error(\"Error analyzing symptoms:\", error);\n    }\n  };\n  const cleanText = text => {\n    if (!text) return \"\";\n    text = text.replace(/undefined/g, \"\").replace(/\\bDiaanosis\\b/, \"Diagnosis\").trim();\n    return fixTypos(text);\n  };\n  const fixTypos = text => {\n    if (!text) return \"\";\n    return text.replace(/(\\w)\\1{2,}/g, \"$1\") // removes 3+ repeated characters\n    .replace(/([a-zA-Z])\\1/g, \"$1\"); // removes double characters\n  };\n  const revealTextAndSpeak = (text, setter) => {\n    if (!text || setter === displayedSymptoms || setter === displayedDiagnosis) return;\n    let index = 0;\n    setter(\"\"); // Reset before revealing\n    let fullText = \"\";\n    const interval = setInterval(() => {\n      const nextChar = text[index];\n      fullText += nextChar;\n      setter(prev => prev + nextChar);\n      index++;\n      if (index >= text.length) {\n        clearInterval(interval);\n        const speech = new SpeechSynthesisUtterance(fullText);\n        speech.lang = \"en-US\";\n        speech.rate = 1;\n        speech.pitch = 1;\n        speechRef.current = speech;\n        window.speechSynthesis.speak(speech);\n      }\n    }, 60);\n  };\n  useEffect(() => {\n    if (symptoms) revealTextAndSpeak(symptoms, setDisplayedSymptoms);\n  }, [symptoms]);\n  useEffect(() => {\n    if (diagnosis) revealTextAndSpeak(diagnosis, setDisplayedDiagnosis);\n  }, [diagnosis]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Symptoms:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), \" \", displayedSymptoms]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chat-message\",\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Diagnosis:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), \" \", displayedDiagnosis]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n};\n_s(ChatBot, \"VFLi+V9D883JIOi6F8B+jfQpF5Q=\", false, function () {\n  return [useLocation];\n});\n_c = ChatBot;\nexport default ChatBot;\nvar _c;\n$RefreshReg$(_c, \"ChatBot\");","map":{"version":3,"names":["React","useState","useEffect","useRef","axios","useLocation","jsxDEV","_jsxDEV","ChatBot","_s","_location$state","location","recordedText","state","symptoms","setSymptoms","diagnosis","setDiagnosis","displayedSymptoms","setDisplayedSymptoms","displayedDiagnosis","setDisplayedDiagnosis","speechRef","analyzeSymptoms","current","window","speechSynthesis","cancel","text","response","post","cleaned","cleanText","data","analysis","symptomsMatch","match","diagnosisMatch","extractedSymptoms","trim","extractedDiagnosis","error","console","replace","fixTypos","revealTextAndSpeak","setter","index","fullText","interval","setInterval","nextChar","prev","length","clearInterval","speech","SpeechSynthesisUtterance","lang","rate","pitch","speak","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/khush/OneDrive/Desktop/new changes code/frontend1/src/Chatbot.js"],"sourcesContent":["import React, { useState, useEffect, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useLocation } from \"react-router-dom\";\r\n\r\nconst ChatBot = () => {\r\n  const location = useLocation();\r\n  const recordedText = location.state?.recordedText || \"\";\r\n\r\n  const [symptoms, setSymptoms] = useState(\"\");\r\n  const [diagnosis, setDiagnosis] = useState(\"\");\r\n  const [displayedSymptoms, setDisplayedSymptoms] = useState(\"\");\r\n  const [displayedDiagnosis, setDisplayedDiagnosis] = useState(\"\");\r\n  const speechRef = useRef(null);\r\n\r\n  useEffect(() => {\r\n    if (recordedText) {\r\n      analyzeSymptoms(recordedText);\r\n    }\r\n\r\n    return () => {\r\n      if (speechRef.current) {\r\n        window.speechSynthesis.cancel();\r\n        speechRef.current = null;\r\n      }\r\n    };\r\n  }, [recordedText]);\r\n\r\n  const analyzeSymptoms = async (text) => {\r\n    try {\r\n      const response = await axios.post(\"http://127.0.0.1:5000/analyze\", { text });\r\n      const cleaned = cleanText(response.data.analysis);\r\n      const symptomsMatch = cleaned.match(/Symptoms:\\s*(.*?)(?:\\n|$)/i);\r\n      const diagnosisMatch = cleaned.match(/Diagnosis:\\s*(.*?)(?:\\n|$)/i);\r\n\r\n      const extractedSymptoms = symptomsMatch ? symptomsMatch[1].trim() : \"\";\r\n      const extractedDiagnosis = diagnosisMatch ? diagnosisMatch[1].trim() : \"\";\r\n\r\n      setSymptoms(extractedSymptoms);\r\n      setDiagnosis(extractedDiagnosis);\r\n    } catch (error) {\r\n      console.error(\"Error analyzing symptoms:\", error);\r\n    }\r\n  };\r\n\r\n  const cleanText = (text) => {\r\n    if (!text) return \"\";\r\n    text = text.replace(/undefined/g, \"\").replace(/\\bDiaanosis\\b/, \"Diagnosis\").trim();\r\n    return fixTypos(text);\r\n  };\r\n\r\n  const fixTypos = (text) => {\r\n    if (!text) return \"\";\r\n    return text\r\n      .replace(/(\\w)\\1{2,}/g, \"$1\") // removes 3+ repeated characters\r\n      .replace(/([a-zA-Z])\\1/g, \"$1\"); // removes double characters\r\n  };\r\n\r\n  const revealTextAndSpeak = (text, setter) => {\r\n    if (!text || setter === displayedSymptoms || setter === displayedDiagnosis) return;\r\n    let index = 0;\r\n    setter(\"\"); // Reset before revealing\r\n    let fullText = \"\";\r\n\r\n    const interval = setInterval(() => {\r\n      const nextChar = text[index];\r\n      fullText += nextChar;\r\n      setter((prev) => prev + nextChar);\r\n      index++;\r\n      if (index >= text.length) {\r\n        clearInterval(interval);\r\n\r\n        const speech = new SpeechSynthesisUtterance(fullText);\r\n        speech.lang = \"en-US\";\r\n        speech.rate = 1;\r\n        speech.pitch = 1;\r\n        speechRef.current = speech;\r\n        window.speechSynthesis.speak(speech);\r\n      }\r\n    }, 60);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (symptoms) revealTextAndSpeak(symptoms, setDisplayedSymptoms);\r\n  }, [symptoms]);\r\n\r\n  useEffect(() => {\r\n    if (diagnosis) revealTextAndSpeak(diagnosis, setDisplayedDiagnosis);\r\n  }, [diagnosis]);\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <div className=\"chat-message\">\r\n        <strong>Symptoms:</strong> {displayedSymptoms}\r\n      </div>\r\n      <div className=\"chat-message\">\r\n        <strong>Diagnosis:</strong> {displayedDiagnosis}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatBot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"'use strict';\n\nvar form = require('./util/form.js');\nvar flag = require('./util/flag.js');\nmodule.exports = spell;\n\n// Check spelling of `word`.\nfunction spell(word) {\n  var self = this;\n  var value = form(self, word, true);\n\n  // Hunspell also provides `root` (root word of the input word), and `compound`\n  // (whether `word` was compound).\n  return {\n    correct: self.correct(word),\n    forbidden: Boolean(value && flag(self.flags, 'FORBIDDENWORD', self.data[value])),\n    warn: Boolean(value && flag(self.flags, 'WARN', self.data[value]))\n  };\n}","map":{"version":3,"names":["form","require","flag","module","exports","spell","word","self","value","correct","forbidden","Boolean","flags","data","warn"],"sources":["C:/Users/khush/OneDrive/Desktop/new changes code/frontend1/node_modules/nspell/lib/spell.js"],"sourcesContent":["'use strict'\n\nvar form = require('./util/form.js')\nvar flag = require('./util/flag.js')\n\nmodule.exports = spell\n\n// Check spelling of `word`.\nfunction spell(word) {\n  var self = this\n  var value = form(self, word, true)\n\n  // Hunspell also provides `root` (root word of the input word), and `compound`\n  // (whether `word` was compound).\n  return {\n    correct: self.correct(word),\n    forbidden: Boolean(\n      value && flag(self.flags, 'FORBIDDENWORD', self.data[value])\n    ),\n    warn: Boolean(value && flag(self.flags, 'WARN', self.data[value]))\n  }\n}\n"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,IAAI,GAAGC,OAAO,CAAC,gBAAgB,CAAC;AACpC,IAAIC,IAAI,GAAGD,OAAO,CAAC,gBAAgB,CAAC;AAEpCE,MAAM,CAACC,OAAO,GAAGC,KAAK;;AAEtB;AACA,SAASA,KAAKA,CAACC,IAAI,EAAE;EACnB,IAAIC,IAAI,GAAG,IAAI;EACf,IAAIC,KAAK,GAAGR,IAAI,CAACO,IAAI,EAAED,IAAI,EAAE,IAAI,CAAC;;EAElC;EACA;EACA,OAAO;IACLG,OAAO,EAAEF,IAAI,CAACE,OAAO,CAACH,IAAI,CAAC;IAC3BI,SAAS,EAAEC,OAAO,CAChBH,KAAK,IAAIN,IAAI,CAACK,IAAI,CAACK,KAAK,EAAE,eAAe,EAAEL,IAAI,CAACM,IAAI,CAACL,KAAK,CAAC,CAC7D,CAAC;IACDM,IAAI,EAAEH,OAAO,CAACH,KAAK,IAAIN,IAAI,CAACK,IAAI,CAACK,KAAK,EAAE,MAAM,EAAEL,IAAI,CAACM,IAAI,CAACL,KAAK,CAAC,CAAC;EACnE,CAAC;AACH","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
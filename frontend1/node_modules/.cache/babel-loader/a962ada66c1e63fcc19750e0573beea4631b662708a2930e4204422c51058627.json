{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}(); /* eslint-disable */\n/**\n * License (MIT)\n *\n * Copyright Â© 2013 Matt Diamond\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n */\n\nvar _inlineWorker = require('inline-worker');\nvar _inlineWorker2 = _interopRequireDefault(_inlineWorker);\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nvar defaultConfig = {\n  bufferLen: 4096,\n  numChannels: 2,\n  mimeType: 'audio/wav'\n};\nvar Microphone = function () {\n  function Microphone(source, config) {\n    var _this = this;\n    _classCallCheck(this, Microphone);\n    this.config = Object.assign({}, defaultConfig, config);\n    this.recording = false;\n    this.callbacks = {\n      getBuffer: [],\n      exportWAV: []\n    };\n    this.context = source.context;\n    this.node = (this.context.createScriptProcessor || this.context.createJavaScriptNode).call(this.context, this.config.bufferLen, this.config.numChannels, this.config.numChannels);\n    this.node.onaudioprocess = function (e) {\n      if (!_this.recording) return;\n      var buffer = [];\n      for (var channel = 0; channel < _this.config.numChannels; channel++) {\n        buffer.push(e.inputBuffer.getChannelData(channel));\n      }\n      _this.worker.postMessage({\n        command: 'record',\n        buffer: buffer\n      });\n    };\n    source.connect(this.node);\n    this.node.connect(this.context.destination); //this should not be necessary\n\n    var self = {};\n    this.worker = new _inlineWorker2.default(function () {\n      var recLength = 0,\n        recBuffers = [],\n        sampleRate = void 0,\n        numChannels = void 0;\n      this.onmessage = function (e) {\n        switch (e.data.command) {\n          case 'init':\n            init(e.data.config);\n            break;\n          case 'record':\n            record(e.data.buffer);\n            break;\n          case 'exportWAV':\n            exportWAV(e.data.type);\n            break;\n          case 'getBuffer':\n            getBuffer();\n            break;\n          case 'clear':\n            clear();\n            break;\n        }\n      };\n      function init(config) {\n        sampleRate = config.sampleRate;\n        numChannels = config.numChannels;\n        initBuffers();\n      }\n      function record(inputBuffer) {\n        for (var channel = 0; channel < numChannels; channel++) {\n          recBuffers[channel].push(inputBuffer[channel]);\n        }\n        recLength += inputBuffer[0].length;\n      }\n      function exportWAV(type) {\n        var buffers = [];\n        for (var channel = 0; channel < numChannels; channel++) {\n          buffers.push(mergeBuffers(recBuffers[channel], recLength));\n        }\n        var interleaved = void 0;\n        if (numChannels === 2) {\n          interleaved = interleave(buffers[0], buffers[1]);\n        } else {\n          interleaved = buffers[0];\n        }\n        var dataview = encodeWAV(interleaved);\n        var audioBlob = new Blob([dataview], {\n          type: type\n        });\n        this.postMessage({\n          command: 'exportWAV',\n          data: audioBlob\n        });\n      }\n      function getBuffer() {\n        var buffers = [];\n        for (var channel = 0; channel < numChannels; channel++) {\n          buffers.push(mergeBuffers(recBuffers[channel], recLength));\n        }\n        this.postMessage({\n          command: 'getBuffer',\n          data: buffers\n        });\n      }\n      function clear() {\n        recLength = 0;\n        recBuffers = [];\n        initBuffers();\n      }\n      function initBuffers() {\n        for (var channel = 0; channel < numChannels; channel++) {\n          recBuffers[channel] = [];\n        }\n      }\n      function mergeBuffers(recBuffers, recLength) {\n        var result = new Float32Array(recLength);\n        var offset = 0;\n        for (var i = 0; i < recBuffers.length; i++) {\n          result.set(recBuffers[i], offset);\n          offset += recBuffers[i].length;\n        }\n        return result;\n      }\n      function interleave(inputL, inputR) {\n        var length = inputL.length + inputR.length;\n        var result = new Float32Array(length);\n        var index = 0,\n          inputIndex = 0;\n        while (index < length) {\n          result[index++] = inputL[inputIndex];\n          result[index++] = inputR[inputIndex];\n          inputIndex++;\n        }\n        return result;\n      }\n      function floatTo16BitPCM(output, offset, input) {\n        for (var i = 0; i < input.length; i++, offset += 2) {\n          var s = Math.max(-1, Math.min(1, input[i]));\n          output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n        }\n      }\n      function writeString(view, offset, string) {\n        for (var i = 0; i < string.length; i += 1) {\n          view.setUint8(offset + i, string.charCodeAt(i));\n        }\n      }\n      function encodeWAV(samples) {\n        var buffer = new ArrayBuffer(44 + samples.length * 2);\n        var view = new DataView(buffer);\n\n        /* RIFF identifier */\n        writeString(view, 0, 'RIFF');\n        /* RIFF chunk length */\n        view.setUint32(4, 36 + samples.length * 2, true);\n        /* RIFF type */\n        writeString(view, 8, 'WAVE');\n        /* format chunk identifier */\n        writeString(view, 12, 'fmt ');\n        /* format chunk length */\n        view.setUint32(16, 16, true);\n        /* sample format (raw) */\n        view.setUint16(20, 1, true);\n        /* channel count */\n        view.setUint16(22, numChannels, true);\n        /* sample rate */\n        view.setUint32(24, sampleRate, true);\n        /* byte rate (sample rate * block align) */\n        view.setUint32(28, sampleRate * 4, true);\n        /* block align (channel count * bytes per sample) */\n        view.setUint16(32, numChannels * 2, true);\n        /* bits per sample */\n        view.setUint16(34, 16, true);\n        /* data chunk identifier */\n        writeString(view, 36, 'data');\n        /* data chunk length */\n        view.setUint32(40, samples.length * 2, true);\n        floatTo16BitPCM(view, 44, samples);\n        return view;\n      }\n    }, self);\n    this.worker.postMessage({\n      command: 'init',\n      config: {\n        sampleRate: this.context.sampleRate,\n        numChannels: this.config.numChannels\n      }\n    });\n    this.worker.onmessage = function (e) {\n      var cb = _this.callbacks[e.data.command].pop();\n      if (typeof cb === 'function') {\n        cb(e.data.data);\n      }\n    };\n  }\n  _createClass(Microphone, [{\n    key: 'record',\n    value: function record() {\n      this.recording = true;\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      this.recording = false;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.worker.postMessage({\n        command: 'clear'\n      });\n    }\n  }, {\n    key: 'getBuffer',\n    value: function getBuffer(cb) {\n      cb = cb || this.config.callback;\n      if (!cb) throw new Error('Callback not set');\n      this.callbacks.getBuffer.push(cb);\n      this.worker.postMessage({\n        command: 'getBuffer'\n      });\n    }\n  }, {\n    key: 'exportWAV',\n    value: function exportWAV(cb, mimeType) {\n      mimeType = mimeType || this.config.mimeType;\n      cb = cb || this.config.callback;\n      if (!cb) throw new Error('Callback not set');\n      this.callbacks.exportWAV.push(cb);\n      this.worker.postMessage({\n        command: 'exportWAV',\n        type: mimeType\n      });\n    }\n  }]);\n  return Microphone;\n}();\nMicrophone.forceDownload = function forceDownload(blob, filename) {\n  var a = document.createElement('a');\n  a.style = 'display: none';\n  document.body.appendChild(a);\n  var url = window.URL.createObjectURL(blob);\n  a.href = url;\n  a.download = filename;\n  a.click();\n  window.URL.revokeObjectURL(url);\n  document.body.removeChild(a);\n};\nexports.default = Microphone;","map":{"version":3,"names":["Object","defineProperty","exports","value","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_inlineWorker","require","_inlineWorker2","_interopRequireDefault","obj","__esModule","default","_classCallCheck","instance","TypeError","defaultConfig","bufferLen","numChannels","mimeType","Microphone","source","config","_this","assign","recording","callbacks","getBuffer","exportWAV","context","node","createScriptProcessor","createJavaScriptNode","call","onaudioprocess","e","buffer","channel","push","inputBuffer","getChannelData","worker","postMessage","command","connect","destination","self","recLength","recBuffers","sampleRate","onmessage","data","init","record","type","clear","initBuffers","buffers","mergeBuffers","interleaved","interleave","dataview","encodeWAV","audioBlob","Blob","result","Float32Array","offset","set","inputL","inputR","index","inputIndex","floatTo16BitPCM","output","input","s","Math","max","min","setInt16","writeString","view","string","setUint8","charCodeAt","samples","ArrayBuffer","DataView","setUint32","setUint16","cb","pop","stop","callback","Error","forceDownload","blob","filename","a","document","createElement","style","body","appendChild","url","window","URL","createObjectURL","href","download","click","revokeObjectURL","removeChild"],"sources":["C:/Users/khush/OneDrive/Desktop/frontend1/node_modules/recorder-js/lib/microphone.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /* eslint-disable */\n/**\n * License (MIT)\n *\n * Copyright Â© 2013 Matt Diamond\n *\n * Permission is hereby granted, free of charge, to any person obtaining a\n * copy of this software and associated documentation files (the \"Software\"),\n * to deal in the Software without restriction, including without limitation\n * the rights to use, copy, modify, merge, publish, distribute, sublicense,\n * and/or sell copies of the Software, and to permit persons to whom the\n * Software is furnished to do so, subject to the following conditions:\n *\n * The above copyright notice and this permission notice shall be included\n * in all copies or substantial portions of the Software.\n *\n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL\n * THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n *\n */\n\n\nvar _inlineWorker = require('inline-worker');\n\nvar _inlineWorker2 = _interopRequireDefault(_inlineWorker);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar defaultConfig = {\n  bufferLen: 4096,\n  numChannels: 2,\n  mimeType: 'audio/wav'\n};\n\nvar Microphone = function () {\n  function Microphone(source, config) {\n    var _this = this;\n\n    _classCallCheck(this, Microphone);\n\n    this.config = Object.assign({}, defaultConfig, config);\n\n    this.recording = false;\n\n    this.callbacks = {\n      getBuffer: [],\n      exportWAV: []\n    };\n\n    this.context = source.context;\n    this.node = (this.context.createScriptProcessor || this.context.createJavaScriptNode).call(this.context, this.config.bufferLen, this.config.numChannels, this.config.numChannels);\n\n    this.node.onaudioprocess = function (e) {\n      if (!_this.recording) return;\n\n      var buffer = [];\n      for (var channel = 0; channel < _this.config.numChannels; channel++) {\n        buffer.push(e.inputBuffer.getChannelData(channel));\n      }\n      _this.worker.postMessage({\n        command: 'record',\n        buffer: buffer\n      });\n    };\n\n    source.connect(this.node);\n    this.node.connect(this.context.destination); //this should not be necessary\n\n    var self = {};\n    this.worker = new _inlineWorker2.default(function () {\n      var recLength = 0,\n          recBuffers = [],\n          sampleRate = void 0,\n          numChannels = void 0;\n\n      this.onmessage = function (e) {\n        switch (e.data.command) {\n          case 'init':\n            init(e.data.config);\n            break;\n          case 'record':\n            record(e.data.buffer);\n            break;\n          case 'exportWAV':\n            exportWAV(e.data.type);\n            break;\n          case 'getBuffer':\n            getBuffer();\n            break;\n          case 'clear':\n            clear();\n            break;\n        }\n      };\n\n      function init(config) {\n        sampleRate = config.sampleRate;\n        numChannels = config.numChannels;\n        initBuffers();\n      }\n\n      function record(inputBuffer) {\n        for (var channel = 0; channel < numChannels; channel++) {\n          recBuffers[channel].push(inputBuffer[channel]);\n        }\n        recLength += inputBuffer[0].length;\n      }\n\n      function exportWAV(type) {\n        var buffers = [];\n        for (var channel = 0; channel < numChannels; channel++) {\n          buffers.push(mergeBuffers(recBuffers[channel], recLength));\n        }\n        var interleaved = void 0;\n        if (numChannels === 2) {\n          interleaved = interleave(buffers[0], buffers[1]);\n        } else {\n          interleaved = buffers[0];\n        }\n        var dataview = encodeWAV(interleaved);\n        var audioBlob = new Blob([dataview], { type: type });\n\n        this.postMessage({ command: 'exportWAV', data: audioBlob });\n      }\n\n      function getBuffer() {\n        var buffers = [];\n        for (var channel = 0; channel < numChannels; channel++) {\n          buffers.push(mergeBuffers(recBuffers[channel], recLength));\n        }\n        this.postMessage({ command: 'getBuffer', data: buffers });\n      }\n\n      function clear() {\n        recLength = 0;\n        recBuffers = [];\n        initBuffers();\n      }\n\n      function initBuffers() {\n        for (var channel = 0; channel < numChannels; channel++) {\n          recBuffers[channel] = [];\n        }\n      }\n\n      function mergeBuffers(recBuffers, recLength) {\n        var result = new Float32Array(recLength);\n        var offset = 0;\n        for (var i = 0; i < recBuffers.length; i++) {\n          result.set(recBuffers[i], offset);\n          offset += recBuffers[i].length;\n        }\n        return result;\n      }\n\n      function interleave(inputL, inputR) {\n        var length = inputL.length + inputR.length;\n        var result = new Float32Array(length);\n\n        var index = 0,\n            inputIndex = 0;\n\n        while (index < length) {\n          result[index++] = inputL[inputIndex];\n          result[index++] = inputR[inputIndex];\n          inputIndex++;\n        }\n        return result;\n      }\n\n      function floatTo16BitPCM(output, offset, input) {\n        for (var i = 0; i < input.length; i++, offset += 2) {\n          var s = Math.max(-1, Math.min(1, input[i]));\n          output.setInt16(offset, s < 0 ? s * 0x8000 : s * 0x7FFF, true);\n        }\n      }\n\n      function writeString(view, offset, string) {\n        for (var i = 0; i < string.length; i += 1) {\n          view.setUint8(offset + i, string.charCodeAt(i));\n        }\n      }\n\n      function encodeWAV(samples) {\n        var buffer = new ArrayBuffer(44 + samples.length * 2);\n        var view = new DataView(buffer);\n\n        /* RIFF identifier */\n        writeString(view, 0, 'RIFF');\n        /* RIFF chunk length */\n        view.setUint32(4, 36 + samples.length * 2, true);\n        /* RIFF type */\n        writeString(view, 8, 'WAVE');\n        /* format chunk identifier */\n        writeString(view, 12, 'fmt ');\n        /* format chunk length */\n        view.setUint32(16, 16, true);\n        /* sample format (raw) */\n        view.setUint16(20, 1, true);\n        /* channel count */\n        view.setUint16(22, numChannels, true);\n        /* sample rate */\n        view.setUint32(24, sampleRate, true);\n        /* byte rate (sample rate * block align) */\n        view.setUint32(28, sampleRate * 4, true);\n        /* block align (channel count * bytes per sample) */\n        view.setUint16(32, numChannels * 2, true);\n        /* bits per sample */\n        view.setUint16(34, 16, true);\n        /* data chunk identifier */\n        writeString(view, 36, 'data');\n        /* data chunk length */\n        view.setUint32(40, samples.length * 2, true);\n\n        floatTo16BitPCM(view, 44, samples);\n\n        return view;\n      }\n    }, self);\n\n    this.worker.postMessage({\n      command: 'init',\n      config: {\n        sampleRate: this.context.sampleRate,\n        numChannels: this.config.numChannels\n      }\n    });\n\n    this.worker.onmessage = function (e) {\n      var cb = _this.callbacks[e.data.command].pop();\n      if (typeof cb === 'function') {\n        cb(e.data.data);\n      }\n    };\n  }\n\n  _createClass(Microphone, [{\n    key: 'record',\n    value: function record() {\n      this.recording = true;\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      this.recording = false;\n    }\n  }, {\n    key: 'clear',\n    value: function clear() {\n      this.worker.postMessage({ command: 'clear' });\n    }\n  }, {\n    key: 'getBuffer',\n    value: function getBuffer(cb) {\n      cb = cb || this.config.callback;\n\n      if (!cb) throw new Error('Callback not set');\n\n      this.callbacks.getBuffer.push(cb);\n\n      this.worker.postMessage({ command: 'getBuffer' });\n    }\n  }, {\n    key: 'exportWAV',\n    value: function exportWAV(cb, mimeType) {\n      mimeType = mimeType || this.config.mimeType;\n      cb = cb || this.config.callback;\n\n      if (!cb) throw new Error('Callback not set');\n\n      this.callbacks.exportWAV.push(cb);\n\n      this.worker.postMessage({\n        command: 'exportWAV',\n        type: mimeType\n      });\n    }\n  }]);\n\n  return Microphone;\n}();\n\nMicrophone.forceDownload = function forceDownload(blob, filename) {\n  var a = document.createElement('a');\n\n  a.style = 'display: none';\n  document.body.appendChild(a);\n\n  var url = window.URL.createObjectURL(blob);\n\n  a.href = url;\n  a.download = filename;\n  a.click();\n\n  window.URL.revokeObjectURL(url);\n\n  document.body.removeChild(a);\n};\n\nexports.default = Microphone;"],"mappings":"AAAA,YAAY;;AAEZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAC3CC,KAAK,EAAE;AACT,CAAC,CAAC;AAEF,IAAIC,YAAY,GAAG,YAAY;EAAE,SAASC,gBAAgBA,CAACC,MAAM,EAAEC,KAAK,EAAE;IAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,KAAK,CAACE,MAAM,EAAED,CAAC,EAAE,EAAE;MAAE,IAAIE,UAAU,GAAGH,KAAK,CAACC,CAAC,CAAC;MAAEE,UAAU,CAACC,UAAU,GAAGD,UAAU,CAACC,UAAU,IAAI,KAAK;MAAED,UAAU,CAACE,YAAY,GAAG,IAAI;MAAE,IAAI,OAAO,IAAIF,UAAU,EAAEA,UAAU,CAACG,QAAQ,GAAG,IAAI;MAAEb,MAAM,CAACC,cAAc,CAACK,MAAM,EAAEI,UAAU,CAACI,GAAG,EAAEJ,UAAU,CAAC;IAAE;EAAE;EAAE,OAAO,UAAUK,WAAW,EAAEC,UAAU,EAAEC,WAAW,EAAE;IAAE,IAAID,UAAU,EAAEX,gBAAgB,CAACU,WAAW,CAACG,SAAS,EAAEF,UAAU,CAAC;IAAE,IAAIC,WAAW,EAAEZ,gBAAgB,CAACU,WAAW,EAAEE,WAAW,CAAC;IAAE,OAAOF,WAAW;EAAE,CAAC;AAAE,CAAC,CAAC,CAAC,CAAC,CAAC;AACrjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,IAAII,aAAa,GAAGC,OAAO,CAAC,eAAe,CAAC;AAE5C,IAAIC,cAAc,GAAGC,sBAAsB,CAACH,aAAa,CAAC;AAE1D,SAASG,sBAAsBA,CAACC,GAAG,EAAE;EAAE,OAAOA,GAAG,IAAIA,GAAG,CAACC,UAAU,GAAGD,GAAG,GAAG;IAAEE,OAAO,EAAEF;EAAI,CAAC;AAAE;AAE9F,SAASG,eAAeA,CAACC,QAAQ,EAAEZ,WAAW,EAAE;EAAE,IAAI,EAAEY,QAAQ,YAAYZ,WAAW,CAAC,EAAE;IAAE,MAAM,IAAIa,SAAS,CAAC,mCAAmC,CAAC;EAAE;AAAE;AAExJ,IAAIC,aAAa,GAAG;EAClBC,SAAS,EAAE,IAAI;EACfC,WAAW,EAAE,CAAC;EACdC,QAAQ,EAAE;AACZ,CAAC;AAED,IAAIC,UAAU,GAAG,YAAY;EAC3B,SAASA,UAAUA,CAACC,MAAM,EAAEC,MAAM,EAAE;IAClC,IAAIC,KAAK,GAAG,IAAI;IAEhBV,eAAe,CAAC,IAAI,EAAEO,UAAU,CAAC;IAEjC,IAAI,CAACE,MAAM,GAAGnC,MAAM,CAACqC,MAAM,CAAC,CAAC,CAAC,EAAER,aAAa,EAAEM,MAAM,CAAC;IAEtD,IAAI,CAACG,SAAS,GAAG,KAAK;IAEtB,IAAI,CAACC,SAAS,GAAG;MACfC,SAAS,EAAE,EAAE;MACbC,SAAS,EAAE;IACb,CAAC;IAED,IAAI,CAACC,OAAO,GAAGR,MAAM,CAACQ,OAAO;IAC7B,IAAI,CAACC,IAAI,GAAG,CAAC,IAAI,CAACD,OAAO,CAACE,qBAAqB,IAAI,IAAI,CAACF,OAAO,CAACG,oBAAoB,EAAEC,IAAI,CAAC,IAAI,CAACJ,OAAO,EAAE,IAAI,CAACP,MAAM,CAACL,SAAS,EAAE,IAAI,CAACK,MAAM,CAACJ,WAAW,EAAE,IAAI,CAACI,MAAM,CAACJ,WAAW,CAAC;IAEjL,IAAI,CAACY,IAAI,CAACI,cAAc,GAAG,UAAUC,CAAC,EAAE;MACtC,IAAI,CAACZ,KAAK,CAACE,SAAS,EAAE;MAEtB,IAAIW,MAAM,GAAG,EAAE;MACf,KAAK,IAAIC,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAGd,KAAK,CAACD,MAAM,CAACJ,WAAW,EAAEmB,OAAO,EAAE,EAAE;QACnED,MAAM,CAACE,IAAI,CAACH,CAAC,CAACI,WAAW,CAACC,cAAc,CAACH,OAAO,CAAC,CAAC;MACpD;MACAd,KAAK,CAACkB,MAAM,CAACC,WAAW,CAAC;QACvBC,OAAO,EAAE,QAAQ;QACjBP,MAAM,EAAEA;MACV,CAAC,CAAC;IACJ,CAAC;IAEDf,MAAM,CAACuB,OAAO,CAAC,IAAI,CAACd,IAAI,CAAC;IACzB,IAAI,CAACA,IAAI,CAACc,OAAO,CAAC,IAAI,CAACf,OAAO,CAACgB,WAAW,CAAC,CAAC,CAAC;;IAE7C,IAAIC,IAAI,GAAG,CAAC,CAAC;IACb,IAAI,CAACL,MAAM,GAAG,IAAIjC,cAAc,CAACI,OAAO,CAAC,YAAY;MACnD,IAAImC,SAAS,GAAG,CAAC;QACbC,UAAU,GAAG,EAAE;QACfC,UAAU,GAAG,KAAK,CAAC;QACnB/B,WAAW,GAAG,KAAK,CAAC;MAExB,IAAI,CAACgC,SAAS,GAAG,UAAUf,CAAC,EAAE;QAC5B,QAAQA,CAAC,CAACgB,IAAI,CAACR,OAAO;UACpB,KAAK,MAAM;YACTS,IAAI,CAACjB,CAAC,CAACgB,IAAI,CAAC7B,MAAM,CAAC;YACnB;UACF,KAAK,QAAQ;YACX+B,MAAM,CAAClB,CAAC,CAACgB,IAAI,CAACf,MAAM,CAAC;YACrB;UACF,KAAK,WAAW;YACdR,SAAS,CAACO,CAAC,CAACgB,IAAI,CAACG,IAAI,CAAC;YACtB;UACF,KAAK,WAAW;YACd3B,SAAS,CAAC,CAAC;YACX;UACF,KAAK,OAAO;YACV4B,KAAK,CAAC,CAAC;YACP;QACJ;MACF,CAAC;MAED,SAASH,IAAIA,CAAC9B,MAAM,EAAE;QACpB2B,UAAU,GAAG3B,MAAM,CAAC2B,UAAU;QAC9B/B,WAAW,GAAGI,MAAM,CAACJ,WAAW;QAChCsC,WAAW,CAAC,CAAC;MACf;MAEA,SAASH,MAAMA,CAACd,WAAW,EAAE;QAC3B,KAAK,IAAIF,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAGnB,WAAW,EAAEmB,OAAO,EAAE,EAAE;UACtDW,UAAU,CAACX,OAAO,CAAC,CAACC,IAAI,CAACC,WAAW,CAACF,OAAO,CAAC,CAAC;QAChD;QACAU,SAAS,IAAIR,WAAW,CAAC,CAAC,CAAC,CAAC3C,MAAM;MACpC;MAEA,SAASgC,SAASA,CAAC0B,IAAI,EAAE;QACvB,IAAIG,OAAO,GAAG,EAAE;QAChB,KAAK,IAAIpB,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAGnB,WAAW,EAAEmB,OAAO,EAAE,EAAE;UACtDoB,OAAO,CAACnB,IAAI,CAACoB,YAAY,CAACV,UAAU,CAACX,OAAO,CAAC,EAAEU,SAAS,CAAC,CAAC;QAC5D;QACA,IAAIY,WAAW,GAAG,KAAK,CAAC;QACxB,IAAIzC,WAAW,KAAK,CAAC,EAAE;UACrByC,WAAW,GAAGC,UAAU,CAACH,OAAO,CAAC,CAAC,CAAC,EAAEA,OAAO,CAAC,CAAC,CAAC,CAAC;QAClD,CAAC,MAAM;UACLE,WAAW,GAAGF,OAAO,CAAC,CAAC,CAAC;QAC1B;QACA,IAAII,QAAQ,GAAGC,SAAS,CAACH,WAAW,CAAC;QACrC,IAAII,SAAS,GAAG,IAAIC,IAAI,CAAC,CAACH,QAAQ,CAAC,EAAE;UAAEP,IAAI,EAAEA;QAAK,CAAC,CAAC;QAEpD,IAAI,CAACZ,WAAW,CAAC;UAAEC,OAAO,EAAE,WAAW;UAAEQ,IAAI,EAAEY;QAAU,CAAC,CAAC;MAC7D;MAEA,SAASpC,SAASA,CAAA,EAAG;QACnB,IAAI8B,OAAO,GAAG,EAAE;QAChB,KAAK,IAAIpB,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAGnB,WAAW,EAAEmB,OAAO,EAAE,EAAE;UACtDoB,OAAO,CAACnB,IAAI,CAACoB,YAAY,CAACV,UAAU,CAACX,OAAO,CAAC,EAAEU,SAAS,CAAC,CAAC;QAC5D;QACA,IAAI,CAACL,WAAW,CAAC;UAAEC,OAAO,EAAE,WAAW;UAAEQ,IAAI,EAAEM;QAAQ,CAAC,CAAC;MAC3D;MAEA,SAASF,KAAKA,CAAA,EAAG;QACfR,SAAS,GAAG,CAAC;QACbC,UAAU,GAAG,EAAE;QACfQ,WAAW,CAAC,CAAC;MACf;MAEA,SAASA,WAAWA,CAAA,EAAG;QACrB,KAAK,IAAInB,OAAO,GAAG,CAAC,EAAEA,OAAO,GAAGnB,WAAW,EAAEmB,OAAO,EAAE,EAAE;UACtDW,UAAU,CAACX,OAAO,CAAC,GAAG,EAAE;QAC1B;MACF;MAEA,SAASqB,YAAYA,CAACV,UAAU,EAAED,SAAS,EAAE;QAC3C,IAAIkB,MAAM,GAAG,IAAIC,YAAY,CAACnB,SAAS,CAAC;QACxC,IAAIoB,MAAM,GAAG,CAAC;QACd,KAAK,IAAIxE,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGqD,UAAU,CAACpD,MAAM,EAAED,CAAC,EAAE,EAAE;UAC1CsE,MAAM,CAACG,GAAG,CAACpB,UAAU,CAACrD,CAAC,CAAC,EAAEwE,MAAM,CAAC;UACjCA,MAAM,IAAInB,UAAU,CAACrD,CAAC,CAAC,CAACC,MAAM;QAChC;QACA,OAAOqE,MAAM;MACf;MAEA,SAASL,UAAUA,CAACS,MAAM,EAAEC,MAAM,EAAE;QAClC,IAAI1E,MAAM,GAAGyE,MAAM,CAACzE,MAAM,GAAG0E,MAAM,CAAC1E,MAAM;QAC1C,IAAIqE,MAAM,GAAG,IAAIC,YAAY,CAACtE,MAAM,CAAC;QAErC,IAAI2E,KAAK,GAAG,CAAC;UACTC,UAAU,GAAG,CAAC;QAElB,OAAOD,KAAK,GAAG3E,MAAM,EAAE;UACrBqE,MAAM,CAACM,KAAK,EAAE,CAAC,GAAGF,MAAM,CAACG,UAAU,CAAC;UACpCP,MAAM,CAACM,KAAK,EAAE,CAAC,GAAGD,MAAM,CAACE,UAAU,CAAC;UACpCA,UAAU,EAAE;QACd;QACA,OAAOP,MAAM;MACf;MAEA,SAASQ,eAAeA,CAACC,MAAM,EAAEP,MAAM,EAAEQ,KAAK,EAAE;QAC9C,KAAK,IAAIhF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGgF,KAAK,CAAC/E,MAAM,EAAED,CAAC,EAAE,EAAEwE,MAAM,IAAI,CAAC,EAAE;UAClD,IAAIS,CAAC,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,EAAED,IAAI,CAACE,GAAG,CAAC,CAAC,EAAEJ,KAAK,CAAChF,CAAC,CAAC,CAAC,CAAC;UAC3C+E,MAAM,CAACM,QAAQ,CAACb,MAAM,EAAES,CAAC,GAAG,CAAC,GAAGA,CAAC,GAAG,MAAM,GAAGA,CAAC,GAAG,MAAM,EAAE,IAAI,CAAC;QAChE;MACF;MAEA,SAASK,WAAWA,CAACC,IAAI,EAAEf,MAAM,EAAEgB,MAAM,EAAE;QACzC,KAAK,IAAIxF,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGwF,MAAM,CAACvF,MAAM,EAAED,CAAC,IAAI,CAAC,EAAE;UACzCuF,IAAI,CAACE,QAAQ,CAACjB,MAAM,GAAGxE,CAAC,EAAEwF,MAAM,CAACE,UAAU,CAAC1F,CAAC,CAAC,CAAC;QACjD;MACF;MAEA,SAASmE,SAASA,CAACwB,OAAO,EAAE;QAC1B,IAAIlD,MAAM,GAAG,IAAImD,WAAW,CAAC,EAAE,GAAGD,OAAO,CAAC1F,MAAM,GAAG,CAAC,CAAC;QACrD,IAAIsF,IAAI,GAAG,IAAIM,QAAQ,CAACpD,MAAM,CAAC;;QAE/B;QACA6C,WAAW,CAACC,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC;QAC5B;QACAA,IAAI,CAACO,SAAS,CAAC,CAAC,EAAE,EAAE,GAAGH,OAAO,CAAC1F,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC;QAChD;QACAqF,WAAW,CAACC,IAAI,EAAE,CAAC,EAAE,MAAM,CAAC;QAC5B;QACAD,WAAW,CAACC,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC;QAC7B;QACAA,IAAI,CAACO,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC;QAC5B;QACAP,IAAI,CAACQ,SAAS,CAAC,EAAE,EAAE,CAAC,EAAE,IAAI,CAAC;QAC3B;QACAR,IAAI,CAACQ,SAAS,CAAC,EAAE,EAAExE,WAAW,EAAE,IAAI,CAAC;QACrC;QACAgE,IAAI,CAACO,SAAS,CAAC,EAAE,EAAExC,UAAU,EAAE,IAAI,CAAC;QACpC;QACAiC,IAAI,CAACO,SAAS,CAAC,EAAE,EAAExC,UAAU,GAAG,CAAC,EAAE,IAAI,CAAC;QACxC;QACAiC,IAAI,CAACQ,SAAS,CAAC,EAAE,EAAExE,WAAW,GAAG,CAAC,EAAE,IAAI,CAAC;QACzC;QACAgE,IAAI,CAACQ,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC;QAC5B;QACAT,WAAW,CAACC,IAAI,EAAE,EAAE,EAAE,MAAM,CAAC;QAC7B;QACAA,IAAI,CAACO,SAAS,CAAC,EAAE,EAAEH,OAAO,CAAC1F,MAAM,GAAG,CAAC,EAAE,IAAI,CAAC;QAE5C6E,eAAe,CAACS,IAAI,EAAE,EAAE,EAAEI,OAAO,CAAC;QAElC,OAAOJ,IAAI;MACb;IACF,CAAC,EAAEpC,IAAI,CAAC;IAER,IAAI,CAACL,MAAM,CAACC,WAAW,CAAC;MACtBC,OAAO,EAAE,MAAM;MACfrB,MAAM,EAAE;QACN2B,UAAU,EAAE,IAAI,CAACpB,OAAO,CAACoB,UAAU;QACnC/B,WAAW,EAAE,IAAI,CAACI,MAAM,CAACJ;MAC3B;IACF,CAAC,CAAC;IAEF,IAAI,CAACuB,MAAM,CAACS,SAAS,GAAG,UAAUf,CAAC,EAAE;MACnC,IAAIwD,EAAE,GAAGpE,KAAK,CAACG,SAAS,CAACS,CAAC,CAACgB,IAAI,CAACR,OAAO,CAAC,CAACiD,GAAG,CAAC,CAAC;MAC9C,IAAI,OAAOD,EAAE,KAAK,UAAU,EAAE;QAC5BA,EAAE,CAACxD,CAAC,CAACgB,IAAI,CAACA,IAAI,CAAC;MACjB;IACF,CAAC;EACH;EAEA5D,YAAY,CAAC6B,UAAU,EAAE,CAAC;IACxBnB,GAAG,EAAE,QAAQ;IACbX,KAAK,EAAE,SAAS+D,MAAMA,CAAA,EAAG;MACvB,IAAI,CAAC5B,SAAS,GAAG,IAAI;IACvB;EACF,CAAC,EAAE;IACDxB,GAAG,EAAE,MAAM;IACXX,KAAK,EAAE,SAASuG,IAAIA,CAAA,EAAG;MACrB,IAAI,CAACpE,SAAS,GAAG,KAAK;IACxB;EACF,CAAC,EAAE;IACDxB,GAAG,EAAE,OAAO;IACZX,KAAK,EAAE,SAASiE,KAAKA,CAAA,EAAG;MACtB,IAAI,CAACd,MAAM,CAACC,WAAW,CAAC;QAAEC,OAAO,EAAE;MAAQ,CAAC,CAAC;IAC/C;EACF,CAAC,EAAE;IACD1C,GAAG,EAAE,WAAW;IAChBX,KAAK,EAAE,SAASqC,SAASA,CAACgE,EAAE,EAAE;MAC5BA,EAAE,GAAGA,EAAE,IAAI,IAAI,CAACrE,MAAM,CAACwE,QAAQ;MAE/B,IAAI,CAACH,EAAE,EAAE,MAAM,IAAII,KAAK,CAAC,kBAAkB,CAAC;MAE5C,IAAI,CAACrE,SAAS,CAACC,SAAS,CAACW,IAAI,CAACqD,EAAE,CAAC;MAEjC,IAAI,CAAClD,MAAM,CAACC,WAAW,CAAC;QAAEC,OAAO,EAAE;MAAY,CAAC,CAAC;IACnD;EACF,CAAC,EAAE;IACD1C,GAAG,EAAE,WAAW;IAChBX,KAAK,EAAE,SAASsC,SAASA,CAAC+D,EAAE,EAAExE,QAAQ,EAAE;MACtCA,QAAQ,GAAGA,QAAQ,IAAI,IAAI,CAACG,MAAM,CAACH,QAAQ;MAC3CwE,EAAE,GAAGA,EAAE,IAAI,IAAI,CAACrE,MAAM,CAACwE,QAAQ;MAE/B,IAAI,CAACH,EAAE,EAAE,MAAM,IAAII,KAAK,CAAC,kBAAkB,CAAC;MAE5C,IAAI,CAACrE,SAAS,CAACE,SAAS,CAACU,IAAI,CAACqD,EAAE,CAAC;MAEjC,IAAI,CAAClD,MAAM,CAACC,WAAW,CAAC;QACtBC,OAAO,EAAE,WAAW;QACpBW,IAAI,EAAEnC;MACR,CAAC,CAAC;IACJ;EACF,CAAC,CAAC,CAAC;EAEH,OAAOC,UAAU;AACnB,CAAC,CAAC,CAAC;AAEHA,UAAU,CAAC4E,aAAa,GAAG,SAASA,aAAaA,CAACC,IAAI,EAAEC,QAAQ,EAAE;EAChE,IAAIC,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;EAEnCF,CAAC,CAACG,KAAK,GAAG,eAAe;EACzBF,QAAQ,CAACG,IAAI,CAACC,WAAW,CAACL,CAAC,CAAC;EAE5B,IAAIM,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACX,IAAI,CAAC;EAE1CE,CAAC,CAACU,IAAI,GAAGJ,GAAG;EACZN,CAAC,CAACW,QAAQ,GAAGZ,QAAQ;EACrBC,CAAC,CAACY,KAAK,CAAC,CAAC;EAETL,MAAM,CAACC,GAAG,CAACK,eAAe,CAACP,GAAG,CAAC;EAE/BL,QAAQ,CAACG,IAAI,CAACU,WAAW,CAACd,CAAC,CAAC;AAC9B,CAAC;AAED9G,OAAO,CAACuB,OAAO,GAAGQ,UAAU","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}
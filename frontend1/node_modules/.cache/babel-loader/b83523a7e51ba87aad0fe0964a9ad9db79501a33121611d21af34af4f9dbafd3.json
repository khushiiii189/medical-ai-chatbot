{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khush\\\\OneDrive\\\\Desktop\\\\new changes code\\\\frontend1\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Recorder from \"recorder-js\";\nimport \"./Chatbot.css\";\nimport micIcon from \"./assets/zoom.png\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst backendUrl = \"http://localhost:5000\";\nconst MedicalChatbot = () => {\n  _s();\n  const [diagnosis, setDiagnosis] = useState(\"\");\n  const [followUp, setFollowUp] = useState(\"\");\n  const [nextSteps, setNextSteps] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [showButtons, setShowButtons] = useState(false);\n  const [showFollowUp, setShowFollowUp] = useState(false);\n  const [showNextSteps, setShowNextSteps] = useState(false);\n  const greetedOnce = useRef(false);\n  const audioContextRef = useRef(null);\n  const recorderRef = useRef(null);\n  const silenceTimer = useRef(null);\n  const isHandledRef = useRef(false); // ðŸ‘ˆ new ref to avoid repeated submission\n\n  useEffect(() => {\n    if (!greetedOnce.current) {\n      greetedOnce.current = true;\n      const greet = new SpeechSynthesisUtterance(\"How can I assist you today?\");\n      window.speechSynthesis.cancel();\n      window.speechSynthesis.speak(greet);\n    }\n  }, []);\n  const typeWriter = async (text, setter, tag = \"\") => {\n    let output = \"\";\n    for (let char of text) {\n      output += char;\n      setter(tag + output);\n      await new Promise(res => setTimeout(res, 20));\n    }\n  };\n  const handleStartRecording = async () => {\n    setError(null);\n    setDiagnosis(\"\");\n    setFollowUp(\"\");\n    setNextSteps(\"\");\n    setShowButtons(false);\n    setShowFollowUp(false);\n    setShowNextSteps(false);\n    setIsRecording(true);\n    try {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      recorderRef.current = new Recorder(audioContextRef.current);\n      await recorderRef.current.init(stream);\n      recorderRef.current.start();\n      const audioInput = audioContextRef.current.createMediaStreamSource(stream);\n      const analyser = audioContextRef.current.createAnalyser();\n      audioInput.connect(analyser);\n      const checkSilence = () => {\n        const buffer = new Float32Array(analyser.fftSize);\n        analyser.getFloatTimeDomainData(buffer);\n        const maxAmplitude = Math.max(...buffer.map(Math.abs));\n        if (maxAmplitude < 0.01) {\n          if (!silenceTimer.current) {\n            silenceTimer.current = setTimeout(() => {\n              if (!isHandledRef.current) {\n                isHandledRef.current = true;\n                handleStopRecording();\n              }\n            }, 10000);\n          }\n        } else {\n          clearTimeout(silenceTimer.current);\n          silenceTimer.current = null;\n        }\n        requestAnimationFrame(checkSilence);\n      };\n      checkSilence();\n    } catch (err) {\n      setError(\"Microphone access denied or not available.\");\n      setIsRecording(false);\n    }\n  };\n  const handleStopRecording = async () => {\n    setIsRecording(false);\n    setIsProcessing(true);\n    clearTimeout(silenceTimer.current);\n    try {\n      const {\n        blob\n      } = await recorderRef.current.stop();\n      const audioFile = new File([blob], \"audio.wav\", {\n        type: \"audio/wav\"\n      });\n      const formData = new FormData();\n      formData.append(\"file\", audioFile);\n      const res = await fetch(`${backendUrl}/analyze_audio`, {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await res.json();\n      if (data.error) throw new Error(data.error);\n      const parseSection = label => {\n        const match = data.analysis.match(new RegExp(`${label}:[\\\\s\\\\S]*?(?=\\\\n\\\\n|$)`, \"i\"));\n        return match ? match[0].replace(`${label}:`, \"\").trim() : \"\";\n      };\n      const symptoms = parseSection(\"Key Symptoms Identified\");\n      const diagnosisText = parseSection(\"Possible Medical Diagnosis\");\n      const followUpQ = parseSection(\"Follow-up Questions for Further Diagnosis\");\n      const nextStepsText = parseSection(\"Recommended Next Steps\");\n      setFollowUp(followUpQ);\n      setNextSteps(nextStepsText);\n      setShowButtons(true);\n      await typeWriter(`<strong><em>Key Symptoms Identified:</em></strong><br>${symptoms}<br><br><strong><em>Possible Medical Diagnosis:</em></strong><br>${diagnosisText}`, setDiagnosis);\n    } catch (err) {\n      console.error(err);\n      setError(\"Error processing audio.\");\n    } finally {\n      setIsProcessing(false);\n    }\n  };\n  const toggleFollowUp = async () => {\n    setShowFollowUp(prev => !prev);\n    if (!showFollowUp) await typeWriter(followUp, setFollowUp);\n  };\n  const toggleNextSteps = async () => {\n    setShowNextSteps(prev => !prev);\n    if (!showNextSteps) await typeWriter(nextSteps, setNextSteps);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Medical AI Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 17\n    }, this), diagnosis && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diagnosis-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Diagnosis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        dangerouslySetInnerHTML: {\n          __html: diagnosis\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 11\n      }, this), showButtons && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleFollowUp,\n          children: showFollowUp ? \"Hide Follow-up Questions\" : \"Show Follow-up Questions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleNextSteps,\n          children: showNextSteps ? \"Hide Recommended Next Steps\" : \"Show Recommended Next Steps\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), showFollowUp && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"Follow-up Questions:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 62\n        }, this), followUp]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 13\n      }, this), showNextSteps && /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: /*#__PURE__*/_jsxDEV(\"em\", {\n            children: \"Recommended Next Steps:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 169,\n            columnNumber: 24\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 16\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 65\n        }, this), nextSteps]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 9\n    }, this), !isRecording && !isProcessing && /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mic-button\",\n      onClick: handleStartRecording,\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: micIcon,\n        alt: \"Mic\",\n        className: \"mic-icon\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 9\n    }, this), isRecording && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"center\", {\n        children: \"Listening... Speak now.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 26\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 23\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 5\n  }, this);\n};\n_s(MedicalChatbot, \"oxsXqTl2+ozSXEUwUP7y1KlcnuY=\");\n_c = MedicalChatbot;\nexport default MedicalChatbot;\nvar _c;\n$RefreshReg$(_c, \"MedicalChatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Recorder","micIcon","jsxDEV","_jsxDEV","Fragment","_Fragment","backendUrl","MedicalChatbot","_s","diagnosis","setDiagnosis","followUp","setFollowUp","nextSteps","setNextSteps","error","setError","isRecording","setIsRecording","isProcessing","setIsProcessing","showButtons","setShowButtons","showFollowUp","setShowFollowUp","showNextSteps","setShowNextSteps","greetedOnce","audioContextRef","recorderRef","silenceTimer","isHandledRef","current","greet","SpeechSynthesisUtterance","window","speechSynthesis","cancel","speak","typeWriter","text","setter","tag","output","char","Promise","res","setTimeout","handleStartRecording","AudioContext","webkitAudioContext","stream","navigator","mediaDevices","getUserMedia","audio","init","start","audioInput","createMediaStreamSource","analyser","createAnalyser","connect","checkSilence","buffer","Float32Array","fftSize","getFloatTimeDomainData","maxAmplitude","Math","max","map","abs","handleStopRecording","clearTimeout","requestAnimationFrame","err","blob","stop","audioFile","File","type","formData","FormData","append","fetch","method","body","data","json","Error","parseSection","label","match","analysis","RegExp","replace","trim","symptoms","diagnosisText","followUpQ","nextStepsText","console","toggleFollowUp","prev","toggleNextSteps","className","children","fileName","_jsxFileName","lineNumber","columnNumber","dangerouslySetInnerHTML","__html","onClick","src","alt","_c","$RefreshReg$"],"sources":["C:/Users/khush/OneDrive/Desktop/new changes code/frontend1/src/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport Recorder from \"recorder-js\";\r\nimport \"./Chatbot.css\";\r\nimport micIcon from \"./assets/zoom.png\";\r\n\r\nconst backendUrl = \"http://localhost:5000\";\r\n\r\nconst MedicalChatbot = () => {\r\n  const [diagnosis, setDiagnosis] = useState(\"\");\r\n  const [followUp, setFollowUp] = useState(\"\");\r\n  const [nextSteps, setNextSteps] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [showButtons, setShowButtons] = useState(false);\r\n  const [showFollowUp, setShowFollowUp] = useState(false);\r\n  const [showNextSteps, setShowNextSteps] = useState(false);\r\n\r\n  const greetedOnce = useRef(false);\r\n  const audioContextRef = useRef(null);\r\n  const recorderRef = useRef(null);\r\n  const silenceTimer = useRef(null);\r\n  const isHandledRef = useRef(false);  // ðŸ‘ˆ new ref to avoid repeated submission\r\n\r\n\r\n  useEffect(() => {\r\n    if (!greetedOnce.current) {\r\n      greetedOnce.current = true;\r\n      const greet = new SpeechSynthesisUtterance(\"How can I assist you today?\");\r\n      window.speechSynthesis.cancel();\r\n      window.speechSynthesis.speak(greet);\r\n    }\r\n  }, []);\r\n\r\n  const typeWriter = async (text, setter, tag = \"\") => {\r\n    let output = \"\";\r\n    for (let char of text) {\r\n      output += char;\r\n      setter(tag + output);\r\n      await new Promise((res) => setTimeout(res, 20));\r\n    }\r\n  };\r\n\r\n  const handleStartRecording = async () => {\r\n    setError(null);\r\n    setDiagnosis(\"\");\r\n    setFollowUp(\"\");\r\n    setNextSteps(\"\");\r\n    setShowButtons(false);\r\n    setShowFollowUp(false);\r\n    setShowNextSteps(false);\r\n    setIsRecording(true);\r\n\r\n    try {\r\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      recorderRef.current = new Recorder(audioContextRef.current);\r\n      await recorderRef.current.init(stream);\r\n      recorderRef.current.start();\r\n\r\n      const audioInput = audioContextRef.current.createMediaStreamSource(stream);\r\n      const analyser = audioContextRef.current.createAnalyser();\r\n      audioInput.connect(analyser);\r\n\r\n      const checkSilence = () => {\r\n        const buffer = new Float32Array(analyser.fftSize);\r\n        analyser.getFloatTimeDomainData(buffer);\r\n        const maxAmplitude = Math.max(...buffer.map(Math.abs));\r\n        if (maxAmplitude < 0.01) {\r\n          if (!silenceTimer.current) {\r\n            silenceTimer.current = setTimeout(() => {\r\n              if (!isHandledRef.current) {\r\n                isHandledRef.current = true;\r\n                handleStopRecording();\r\n              }\r\n            }, 10000); \r\n          }\r\n        } else {\r\n          clearTimeout(silenceTimer.current);\r\n          silenceTimer.current = null;\r\n        }\r\n        requestAnimationFrame(checkSilence);\r\n      };\r\n      checkSilence();\r\n    } catch (err) {\r\n      setError(\"Microphone access denied or not available.\");\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  const handleStopRecording = async () => {\r\n    setIsRecording(false);\r\n    setIsProcessing(true);\r\n    clearTimeout(silenceTimer.current);\r\n\r\n    try {\r\n      const { blob } = await recorderRef.current.stop();\r\n      const audioFile = new File([blob], \"audio.wav\", { type: \"audio/wav\" });\r\n      const formData = new FormData();\r\n      formData.append(\"file\", audioFile);\r\n\r\n      const res = await fetch(`${backendUrl}/analyze_audio`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await res.json();\r\n      if (data.error) throw new Error(data.error);\r\n\r\n      const parseSection = (label) => {\r\n        const match = data.analysis.match(new RegExp(`${label}:[\\\\s\\\\S]*?(?=\\\\n\\\\n|$)`, \"i\"));\r\n        return match ? match[0].replace(`${label}:`, \"\").trim() : \"\";\r\n      };\r\n\r\n      const symptoms = parseSection(\"Key Symptoms Identified\");\r\n      const diagnosisText = parseSection(\"Possible Medical Diagnosis\");\r\n      const followUpQ = parseSection(\"Follow-up Questions for Further Diagnosis\");\r\n      const nextStepsText = parseSection(\"Recommended Next Steps\");\r\n\r\n      setFollowUp(followUpQ);\r\n      setNextSteps(nextStepsText);\r\n      setShowButtons(true);\r\n\r\n      await typeWriter(\r\n        `<strong><em>Key Symptoms Identified:</em></strong><br>${symptoms}<br><br><strong><em>Possible Medical Diagnosis:</em></strong><br>${diagnosisText}`,\r\n        setDiagnosis\r\n      );\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError(\"Error processing audio.\");\r\n    } finally {\r\n      setIsProcessing(false);\r\n    }\r\n  };\r\n\r\n  const toggleFollowUp = async () => {\r\n    setShowFollowUp((prev) => !prev);\r\n    if (!showFollowUp) await typeWriter(followUp, setFollowUp);\r\n  };\r\n\r\n  const toggleNextSteps = async () => {\r\n    setShowNextSteps((prev) => !prev);\r\n    if (!showNextSteps) await typeWriter(nextSteps, setNextSteps);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <h1>Medical AI Chatbot</h1>\r\n      {error && <p className=\"error-message\">Error: {error}</p>}\r\n\r\n      {diagnosis && (\r\n        <div className=\"diagnosis-box\">\r\n          <h2>Diagnosis</h2>\r\n          <p dangerouslySetInnerHTML={{ __html: diagnosis }} />\r\n          {showButtons && (\r\n            <>\r\n              <button onClick={toggleFollowUp}>\r\n                {showFollowUp ? \"Hide Follow-up Questions\" : \"Show Follow-up Questions\"}\r\n              </button>\r\n              <button onClick={toggleNextSteps}>\r\n                {showNextSteps ? \"Hide Recommended Next Steps\" : \"Show Recommended Next Steps\"}\r\n              </button>\r\n            </>\r\n          )}\r\n          {showFollowUp && (\r\n            <p><strong><em>Follow-up Questions:</em></strong><br />{followUp}</p>\r\n          )}\r\n          {showNextSteps && (\r\n            <p><strong><em>Recommended Next Steps:</em></strong><br />{nextSteps}</p>\r\n          )}\r\n        </div>\r\n      )}\r\n\r\n      {!isRecording && !isProcessing && (\r\n        <button className=\"mic-button\" onClick={handleStartRecording}>\r\n          <img src={micIcon} alt=\"Mic\" className=\"mic-icon\" />\r\n        </button>\r\n      )}\r\n      {isRecording && <p><center>Listening... Speak now.</center></p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicalChatbot;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,EAAEC,SAAS,QAAQ,OAAO;AAC1D,OAAOC,QAAQ,MAAM,aAAa;AAClC,OAAO,eAAe;AACtB,OAAOC,OAAO,MAAM,mBAAmB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAExC,MAAMC,UAAU,GAAG,uBAAuB;AAE1C,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACc,QAAQ,EAAEC,WAAW,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACgB,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACoB,WAAW,EAAEC,cAAc,CAAC,GAAGrB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACsB,YAAY,EAAEC,eAAe,CAAC,GAAGvB,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAACwB,WAAW,EAAEC,cAAc,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAAC0B,YAAY,EAAEC,eAAe,CAAC,GAAG3B,QAAQ,CAAC,KAAK,CAAC;EACvD,MAAM,CAAC4B,aAAa,EAAEC,gBAAgB,CAAC,GAAG7B,QAAQ,CAAC,KAAK,CAAC;EAEzD,MAAM8B,WAAW,GAAG7B,MAAM,CAAC,KAAK,CAAC;EACjC,MAAM8B,eAAe,GAAG9B,MAAM,CAAC,IAAI,CAAC;EACpC,MAAM+B,WAAW,GAAG/B,MAAM,CAAC,IAAI,CAAC;EAChC,MAAMgC,YAAY,GAAGhC,MAAM,CAAC,IAAI,CAAC;EACjC,MAAMiC,YAAY,GAAGjC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAE;;EAGrCC,SAAS,CAAC,MAAM;IACd,IAAI,CAAC4B,WAAW,CAACK,OAAO,EAAE;MACxBL,WAAW,CAACK,OAAO,GAAG,IAAI;MAC1B,MAAMC,KAAK,GAAG,IAAIC,wBAAwB,CAAC,6BAA6B,CAAC;MACzEC,MAAM,CAACC,eAAe,CAACC,MAAM,CAAC,CAAC;MAC/BF,MAAM,CAACC,eAAe,CAACE,KAAK,CAACL,KAAK,CAAC;IACrC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,UAAU,GAAG,MAAAA,CAAOC,IAAI,EAAEC,MAAM,EAAEC,GAAG,GAAG,EAAE,KAAK;IACnD,IAAIC,MAAM,GAAG,EAAE;IACf,KAAK,IAAIC,IAAI,IAAIJ,IAAI,EAAE;MACrBG,MAAM,IAAIC,IAAI;MACdH,MAAM,CAACC,GAAG,GAAGC,MAAM,CAAC;MACpB,MAAM,IAAIE,OAAO,CAAEC,GAAG,IAAKC,UAAU,CAACD,GAAG,EAAE,EAAE,CAAC,CAAC;IACjD;EACF,CAAC;EAED,MAAME,oBAAoB,GAAG,MAAAA,CAAA,KAAY;IACvChC,QAAQ,CAAC,IAAI,CAAC;IACdN,YAAY,CAAC,EAAE,CAAC;IAChBE,WAAW,CAAC,EAAE,CAAC;IACfE,YAAY,CAAC,EAAE,CAAC;IAChBQ,cAAc,CAAC,KAAK,CAAC;IACrBE,eAAe,CAAC,KAAK,CAAC;IACtBE,gBAAgB,CAAC,KAAK,CAAC;IACvBR,cAAc,CAAC,IAAI,CAAC;IAEpB,IAAI;MACFU,eAAe,CAACI,OAAO,GAAG,KAAKG,MAAM,CAACc,YAAY,IAAId,MAAM,CAACe,kBAAkB,EAAE,CAAC;MAClF,MAAMC,MAAM,GAAG,MAAMC,SAAS,CAACC,YAAY,CAACC,YAAY,CAAC;QAAEC,KAAK,EAAE;MAAK,CAAC,CAAC;MACzE1B,WAAW,CAACG,OAAO,GAAG,IAAIhC,QAAQ,CAAC4B,eAAe,CAACI,OAAO,CAAC;MAC3D,MAAMH,WAAW,CAACG,OAAO,CAACwB,IAAI,CAACL,MAAM,CAAC;MACtCtB,WAAW,CAACG,OAAO,CAACyB,KAAK,CAAC,CAAC;MAE3B,MAAMC,UAAU,GAAG9B,eAAe,CAACI,OAAO,CAAC2B,uBAAuB,CAACR,MAAM,CAAC;MAC1E,MAAMS,QAAQ,GAAGhC,eAAe,CAACI,OAAO,CAAC6B,cAAc,CAAC,CAAC;MACzDH,UAAU,CAACI,OAAO,CAACF,QAAQ,CAAC;MAE5B,MAAMG,YAAY,GAAGA,CAAA,KAAM;QACzB,MAAMC,MAAM,GAAG,IAAIC,YAAY,CAACL,QAAQ,CAACM,OAAO,CAAC;QACjDN,QAAQ,CAACO,sBAAsB,CAACH,MAAM,CAAC;QACvC,MAAMI,YAAY,GAAGC,IAAI,CAACC,GAAG,CAAC,GAAGN,MAAM,CAACO,GAAG,CAACF,IAAI,CAACG,GAAG,CAAC,CAAC;QACtD,IAAIJ,YAAY,GAAG,IAAI,EAAE;UACvB,IAAI,CAACtC,YAAY,CAACE,OAAO,EAAE;YACzBF,YAAY,CAACE,OAAO,GAAGe,UAAU,CAAC,MAAM;cACtC,IAAI,CAAChB,YAAY,CAACC,OAAO,EAAE;gBACzBD,YAAY,CAACC,OAAO,GAAG,IAAI;gBAC3ByC,mBAAmB,CAAC,CAAC;cACvB;YACF,CAAC,EAAE,KAAK,CAAC;UACX;QACF,CAAC,MAAM;UACLC,YAAY,CAAC5C,YAAY,CAACE,OAAO,CAAC;UAClCF,YAAY,CAACE,OAAO,GAAG,IAAI;QAC7B;QACA2C,qBAAqB,CAACZ,YAAY,CAAC;MACrC,CAAC;MACDA,YAAY,CAAC,CAAC;IAChB,CAAC,CAAC,OAAOa,GAAG,EAAE;MACZ5D,QAAQ,CAAC,4CAA4C,CAAC;MACtDE,cAAc,CAAC,KAAK,CAAC;IACvB;EACF,CAAC;EAED,MAAMuD,mBAAmB,GAAG,MAAAA,CAAA,KAAY;IACtCvD,cAAc,CAAC,KAAK,CAAC;IACrBE,eAAe,CAAC,IAAI,CAAC;IACrBsD,YAAY,CAAC5C,YAAY,CAACE,OAAO,CAAC;IAElC,IAAI;MACF,MAAM;QAAE6C;MAAK,CAAC,GAAG,MAAMhD,WAAW,CAACG,OAAO,CAAC8C,IAAI,CAAC,CAAC;MACjD,MAAMC,SAAS,GAAG,IAAIC,IAAI,CAAC,CAACH,IAAI,CAAC,EAAE,WAAW,EAAE;QAAEI,IAAI,EAAE;MAAY,CAAC,CAAC;MACtE,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEL,SAAS,CAAC;MAElC,MAAMjC,GAAG,GAAG,MAAMuC,KAAK,CAAC,GAAG/E,UAAU,gBAAgB,EAAE;QACrDgF,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEL;MACR,CAAC,CAAC;MAEF,MAAMM,IAAI,GAAG,MAAM1C,GAAG,CAAC2C,IAAI,CAAC,CAAC;MAC7B,IAAID,IAAI,CAACzE,KAAK,EAAE,MAAM,IAAI2E,KAAK,CAACF,IAAI,CAACzE,KAAK,CAAC;MAE3C,MAAM4E,YAAY,GAAIC,KAAK,IAAK;QAC9B,MAAMC,KAAK,GAAGL,IAAI,CAACM,QAAQ,CAACD,KAAK,CAAC,IAAIE,MAAM,CAAC,GAAGH,KAAK,yBAAyB,EAAE,GAAG,CAAC,CAAC;QACrF,OAAOC,KAAK,GAAGA,KAAK,CAAC,CAAC,CAAC,CAACG,OAAO,CAAC,GAAGJ,KAAK,GAAG,EAAE,EAAE,CAAC,CAACK,IAAI,CAAC,CAAC,GAAG,EAAE;MAC9D,CAAC;MAED,MAAMC,QAAQ,GAAGP,YAAY,CAAC,yBAAyB,CAAC;MACxD,MAAMQ,aAAa,GAAGR,YAAY,CAAC,4BAA4B,CAAC;MAChE,MAAMS,SAAS,GAAGT,YAAY,CAAC,2CAA2C,CAAC;MAC3E,MAAMU,aAAa,GAAGV,YAAY,CAAC,wBAAwB,CAAC;MAE5D/E,WAAW,CAACwF,SAAS,CAAC;MACtBtF,YAAY,CAACuF,aAAa,CAAC;MAC3B/E,cAAc,CAAC,IAAI,CAAC;MAEpB,MAAMiB,UAAU,CACd,yDAAyD2D,QAAQ,oEAAoEC,aAAa,EAAE,EACpJzF,YACF,CAAC;IACH,CAAC,CAAC,OAAOkE,GAAG,EAAE;MACZ0B,OAAO,CAACvF,KAAK,CAAC6D,GAAG,CAAC;MAClB5D,QAAQ,CAAC,yBAAyB,CAAC;IACrC,CAAC,SAAS;MACRI,eAAe,CAAC,KAAK,CAAC;IACxB;EACF,CAAC;EAED,MAAMmF,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC/E,eAAe,CAAEgF,IAAI,IAAK,CAACA,IAAI,CAAC;IAChC,IAAI,CAACjF,YAAY,EAAE,MAAMgB,UAAU,CAAC5B,QAAQ,EAAEC,WAAW,CAAC;EAC5D,CAAC;EAED,MAAM6F,eAAe,GAAG,MAAAA,CAAA,KAAY;IAClC/E,gBAAgB,CAAE8E,IAAI,IAAK,CAACA,IAAI,CAAC;IACjC,IAAI,CAAC/E,aAAa,EAAE,MAAMc,UAAU,CAAC1B,SAAS,EAAEC,YAAY,CAAC;EAC/D,CAAC;EAED,oBACEX,OAAA;IAAKuG,SAAS,EAAC,mBAAmB;IAAAC,QAAA,gBAChCxG,OAAA;MAAAwG,QAAA,EAAI;IAAkB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAC1BhG,KAAK,iBAAIZ,OAAA;MAAGuG,SAAS,EAAC,eAAe;MAAAC,QAAA,GAAC,SAAO,EAAC5F,KAAK;IAAA;MAAA6F,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EAExDtG,SAAS,iBACRN,OAAA;MAAKuG,SAAS,EAAC,eAAe;MAAAC,QAAA,gBAC5BxG,OAAA;QAAAwG,QAAA,EAAI;MAAS;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClB5G,OAAA;QAAG6G,uBAAuB,EAAE;UAAEC,MAAM,EAAExG;QAAU;MAAE;QAAAmG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,EACpD1F,WAAW,iBACVlB,OAAA,CAAAE,SAAA;QAAAsG,QAAA,gBACExG,OAAA;UAAQ+G,OAAO,EAAEX,cAAe;UAAAI,QAAA,EAC7BpF,YAAY,GAAG,0BAA0B,GAAG;QAA0B;UAAAqF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjE,CAAC,eACT5G,OAAA;UAAQ+G,OAAO,EAAET,eAAgB;UAAAE,QAAA,EAC9BlF,aAAa,GAAG,6BAA6B,GAAG;QAA6B;UAAAmF,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACxE,CAAC;MAAA,eACT,CACH,EACAxF,YAAY,iBACXpB,OAAA;QAAAwG,QAAA,gBAAGxG,OAAA;UAAAwG,QAAA,eAAQxG,OAAA;YAAAwG,QAAA,EAAI;UAAoB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAAA5G,OAAA;UAAAyG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAACpG,QAAQ;MAAA;QAAAiG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CACrE,EACAtF,aAAa,iBACZtB,OAAA;QAAAwG,QAAA,gBAAGxG,OAAA;UAAAwG,QAAA,eAAQxG,OAAA;YAAAwG,QAAA,EAAI;UAAuB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,eAAA5G,OAAA;UAAAyG,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAK,CAAC,EAAClG,SAAS;MAAA;QAAA+F,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CACzE;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACE,CACN,EAEA,CAAC9F,WAAW,IAAI,CAACE,YAAY,iBAC5BhB,OAAA;MAAQuG,SAAS,EAAC,YAAY;MAACQ,OAAO,EAAElE,oBAAqB;MAAA2D,QAAA,eAC3DxG,OAAA;QAAKgH,GAAG,EAAElH,OAAQ;QAACmH,GAAG,EAAC,KAAK;QAACV,SAAS,EAAC;MAAU;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CACT,EACA9F,WAAW,iBAAId,OAAA;MAAAwG,QAAA,eAAGxG,OAAA;QAAAwG,QAAA,EAAQ;MAAuB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC5D,CAAC;AAEV,CAAC;AAACvG,EAAA,CA9KID,cAAc;AAAA8G,EAAA,GAAd9G,cAAc;AAgLpB,eAAeA,cAAc;AAAC,IAAA8G,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
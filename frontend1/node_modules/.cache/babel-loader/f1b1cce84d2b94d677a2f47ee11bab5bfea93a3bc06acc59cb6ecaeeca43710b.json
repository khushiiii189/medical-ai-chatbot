{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\khush\\\\OneDrive\\\\Desktop\\\\new changes code\\\\frontend1\\\\src\\\\Chatbot.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef, useEffect } from \"react\";\nimport Recorder from \"recorder-js\";\nimport \"./Chatbot.css\";\nimport nspell from \"nspell\";\nimport dictionary from \"dictionary-en\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const fixTypos = async text => {\n  return new Promise((resolve, reject) => {\n    dictionary((err, dict) => {\n      if (err) return reject(err);\n      const spell = nspell(dict);\n      const cleaned = text.split(\" \").map(word => {\n        const normalized = normalizeRepeats(word);\n        if (!spell.correct(normalized)) {\n          const suggestions = spell.suggest(normalized);\n          return suggestions.length > 0 ? suggestions[0] : normalized;\n        }\n        return normalized;\n      }).join(\" \");\n      resolve(cleaned);\n    });\n  });\n};\nconst backendUrl = \"http://localhost:5000\";\nconst MedicalChatbot = () => {\n  _s();\n  const [conversation, setConversation] = useState([]);\n  const [diagnosis, setDiagnosis] = useState(\"\");\n  const [keySymptoms, setKeySymptoms] = useState(\"\");\n  const [followUps, setFollowUps] = useState(\"\");\n  const [recommendations, setRecommendations] = useState(\"\");\n  const [displayFollowUps, setDisplayFollowUps] = useState(\"\");\n  const [displayRecommendations, setDisplayRecommendations] = useState(\"\");\n  const [error, setError] = useState(null);\n  const [isRecording, setIsRecording] = useState(false);\n  const [isProcessing, setIsProcessing] = useState(false);\n  const [displayedDiagnosis, setDisplayedDiagnosis] = useState(\"\");\n  const [displayedSymptoms, setDisplayedSymptoms] = useState(\"\");\n  const [isDiagnosisFinal, setIsDiagnosisFinal] = useState(false);\n  const audioContextRef = useRef(null);\n  const recorderRef = useRef(null);\n  const silenceTimer = useRef(null);\n  const speechRef = useRef(null);\n  const fullDiagnosisRef = useRef(\"\");\n  const followUpsRef = useRef(\"\");\n  const recommendationsRef = useRef(\"\");\n  const keySymptomsRef = useRef(\"\");\n  useEffect(() => {\n    if (keySymptomsRef.current && !displayedSymptoms) {\n      revealTextAndSpeak(keySymptomsRef.current, setDisplayedSymptoms);\n    }\n    if (fullDiagnosisRef.current && !isDiagnosisFinal) {\n      revealTextAndSpeak(fullDiagnosisRef.current, setDisplayedDiagnosis);\n      setIsDiagnosisFinal(true);\n    }\n  }, [diagnosis, keySymptoms, isDiagnosisFinal, displayedSymptoms]);\n  const revealTextAndSpeak = (text, setter) => {\n    if (!text) return;\n    let index = 0;\n    setter(\"\");\n    let fullText = \"\";\n    const interval = setInterval(() => {\n      const nextChar = text[index];\n      fullText += nextChar;\n      setter(prev => prev + nextChar);\n      index++;\n      if (index >= text.length) {\n        clearInterval(interval);\n        const speech = new SpeechSynthesisUtterance(fullText);\n        speech.lang = \"en-US\";\n        speech.rate = 1;\n        speech.pitch = 1;\n        window.speechSynthesis.speak(speech);\n      }\n    }, 60);\n  };\n  const handleStartRecording = async () => {\n    setError(null);\n    setIsRecording(true);\n    try {\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\n      const stream = await navigator.mediaDevices.getUserMedia({\n        audio: true\n      });\n      recorderRef.current = new Recorder(audioContextRef.current);\n      await recorderRef.current.init(stream);\n      recorderRef.current.start();\n      const audioInput = audioContextRef.current.createMediaStreamSource(stream);\n      const analyser = audioContextRef.current.createAnalyser();\n      audioInput.connect(analyser);\n      const checkSilence = () => {\n        const buffer = new Float32Array(analyser.fftSize);\n        analyser.getFloatTimeDomainData(buffer);\n        const maxAmplitude = Math.max(...buffer.map(Math.abs));\n        if (maxAmplitude < 0.01) {\n          if (!silenceTimer.current) {\n            silenceTimer.current = setTimeout(() => handleStopRecording(), 1500);\n          }\n        } else {\n          clearTimeout(silenceTimer.current);\n          silenceTimer.current = null;\n        }\n        requestAnimationFrame(checkSilence);\n      };\n      checkSilence();\n    } catch (error) {\n      setError(\"Microphone access denied or not available.\");\n      setIsRecording(false);\n    }\n  };\n  const handleStopRecording = async () => {\n    setIsRecording(false);\n    setIsProcessing(true);\n    clearTimeout(silenceTimer.current);\n    try {\n      const {\n        blob\n      } = await recorderRef.current.stop();\n      const audioFile = new File([blob], \"latest_audio.wav\", {\n        type: \"audio/wav\"\n      });\n      const formData = new FormData();\n      formData.append(\"file\", audioFile);\n      const transcriptionResponse = await fetch(`${backendUrl}/transcribe`, {\n        method: \"POST\",\n        body: formData\n      });\n      const transcriptionData = await transcriptionResponse.json();\n      if (transcriptionData.error) {\n        setError(transcriptionData.error);\n        setIsProcessing(false);\n        return;\n      }\n      setConversation([{\n        role: \"AI\",\n        text: `Transcribed Text: ${transcriptionData.transcription}`\n      }]);\n      const analysisResponse = await fetch(`${backendUrl}/analyze`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify({\n          text: transcriptionData.transcription\n        })\n      });\n      const analysisData = await analysisResponse.json();\n      const result = cleanText(analysisData.analysis);\n      keySymptomsRef.current = extractSection(result, \"Key Symptoms Identified\") || \"No key symptoms mentioned.\";\n      fullDiagnosisRef.current = extractSection(result, \"Possible Medical Diagnosis\") || \"Diagnosis pending further details.\";\n      followUpsRef.current = extractSection(result, \"Follow-up Questions for Further Diagnosis\") || \"No follow-up questions provided.\";\n      recommendationsRef.current = extractSection(result, \"Recommended Next Steps\") || \"No recommendations provided.\";\n      setKeySymptoms(keySymptomsRef.current);\n      setDiagnosis(fullDiagnosisRef.current);\n    } catch (error) {\n      setError(\"Server error: \" + error.message);\n    }\n    setIsProcessing(false);\n  };\n  const extractSection = (text, label) => {\n    const safeLabel = label.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\n    const regex = new RegExp(`\\\\*\\\\*${safeLabel}:\\\\*\\\\*\\\\s*([\\\\s\\\\S]*?)(?=\\\\n\\\\*\\\\*|$)`, \"m\");\n    const match = text.match(regex);\n    return match && match[1] ? match[1].trim() : null;\n  };\n  const cleanText = async text => {\n    if (!text) return \"\";\n    text = text.replace(/undefined/g, \"\").replace(/\\bDiaanosis\\b/, \"Diagnosis\").trim();\n    return await fixTypos(text); // Awaiting the asynchronous fixTypos function\n  };\n  const normalizeRepeats = word => word.replace(/(\\w)\\1{2,}/g, \"$1$1\");\n  const speakText = text => {\n    if (speechRef.current) window.speechSynthesis.cancel();\n    const speech = new SpeechSynthesisUtterance(text);\n    speech.lang = \"en-US\";\n    speech.rate = 1;\n    speech.pitch = 1;\n    speechRef.current = speech;\n    window.speechSynthesis.speak(speech);\n  };\n  const handleFollowUpsClick = () => {\n    revealTextAndSpeak(followUpsRef.current, setDisplayFollowUps);\n  };\n  const handleRecommendationsClick = () => {\n    revealTextAndSpeak(recommendationsRef.current, setDisplayRecommendations);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"chatbot-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Medical AI Chatbot\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error-message\",\n      children: [\"Error: \", error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"chatbox\",\n      children: conversation.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"message\",\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: [msg.role, \": \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 214,\n          columnNumber: 13\n        }, this), msg.text]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 213,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }, this), (keySymptoms || diagnosis) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"diagnosis-box\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Diagnosis\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 221,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Key Symptoms Identified:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 222,\n          columnNumber: 14\n        }, this), \" \", displayedSymptoms]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 222,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: /*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Possible Medical Diagnosis:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: displayedDiagnosis\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 224,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleFollowUpsClick,\n        children: \"Show Follow-up Questions\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 226,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRecommendationsClick,\n        children: \"Show Recommendations\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this), displayFollowUps && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Follow-up Questions:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 37\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: displayFollowUps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 66\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 32\n      }, this), displayRecommendations && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Recommendations:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 43\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: displayRecommendations\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 229,\n          columnNumber: 68\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 38\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this), !isRecording && !isProcessing && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleStartRecording,\n      children: \"Start Recording\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 9\n    }, this), isRecording && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83C\\uDF99\\uFE0F Listening... Speak now.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 23\n    }, this), isProcessing && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uD83D\\uDD04 Processing audio, please wait...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n};\n_s(MedicalChatbot, \"SOo4npmsN3F0u1EEhAgtkwG9KvE=\");\n_c = MedicalChatbot;\nexport default MedicalChatbot;\nvar _c;\n$RefreshReg$(_c, \"MedicalChatbot\");","map":{"version":3,"names":["React","useState","useRef","useEffect","Recorder","nspell","dictionary","jsxDEV","_jsxDEV","fixTypos","text","Promise","resolve","reject","err","dict","spell","cleaned","split","map","word","normalized","normalizeRepeats","correct","suggestions","suggest","length","join","backendUrl","MedicalChatbot","_s","conversation","setConversation","diagnosis","setDiagnosis","keySymptoms","setKeySymptoms","followUps","setFollowUps","recommendations","setRecommendations","displayFollowUps","setDisplayFollowUps","displayRecommendations","setDisplayRecommendations","error","setError","isRecording","setIsRecording","isProcessing","setIsProcessing","displayedDiagnosis","setDisplayedDiagnosis","displayedSymptoms","setDisplayedSymptoms","isDiagnosisFinal","setIsDiagnosisFinal","audioContextRef","recorderRef","silenceTimer","speechRef","fullDiagnosisRef","followUpsRef","recommendationsRef","keySymptomsRef","current","revealTextAndSpeak","setter","index","fullText","interval","setInterval","nextChar","prev","clearInterval","speech","SpeechSynthesisUtterance","lang","rate","pitch","window","speechSynthesis","speak","handleStartRecording","AudioContext","webkitAudioContext","stream","navigator","mediaDevices","getUserMedia","audio","init","start","audioInput","createMediaStreamSource","analyser","createAnalyser","connect","checkSilence","buffer","Float32Array","fftSize","getFloatTimeDomainData","maxAmplitude","Math","max","abs","setTimeout","handleStopRecording","clearTimeout","requestAnimationFrame","blob","stop","audioFile","File","type","formData","FormData","append","transcriptionResponse","fetch","method","body","transcriptionData","json","role","transcription","analysisResponse","headers","JSON","stringify","analysisData","result","cleanText","analysis","extractSection","message","label","safeLabel","replace","regex","RegExp","match","trim","speakText","cancel","handleFollowUpsClick","handleRecommendationsClick","className","children","fileName","_jsxFileName","lineNumber","columnNumber","msg","onClick","_c","$RefreshReg$"],"sources":["C:/Users/khush/OneDrive/Desktop/new changes code/frontend1/src/Chatbot.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from \"react\";\r\nimport Recorder from \"recorder-js\";\r\nimport \"./Chatbot.css\";\r\nimport nspell from \"nspell\";\r\nimport dictionary from \"dictionary-en\";\r\n\r\n\r\nexport const fixTypos = async (text) => {\r\n  return new Promise((resolve, reject) => {\r\n    dictionary((err, dict) => {\r\n      if (err) return reject(err);\r\n      const spell = nspell(dict);\r\n\r\n      const cleaned = text\r\n        .split(\" \")\r\n        .map((word) => {\r\n          const normalized = normalizeRepeats(word);\r\n          if (!spell.correct(normalized)) {\r\n            const suggestions = spell.suggest(normalized);\r\n            return suggestions.length > 0 ? suggestions[0] : normalized;\r\n          }\r\n          return normalized;\r\n        })\r\n        .join(\" \");\r\n      resolve(cleaned);\r\n    });\r\n  });\r\n};\r\n\r\nconst backendUrl = \"http://localhost:5000\";\r\n\r\nconst MedicalChatbot = () => {\r\n  const [conversation, setConversation] = useState([]);\r\n  const [diagnosis, setDiagnosis] = useState(\"\");\r\n  const [keySymptoms, setKeySymptoms] = useState(\"\");\r\n  const [followUps, setFollowUps] = useState(\"\");\r\n  const [recommendations, setRecommendations] = useState(\"\");\r\n  const [displayFollowUps, setDisplayFollowUps] = useState(\"\");\r\n  const [displayRecommendations, setDisplayRecommendations] = useState(\"\");\r\n  const [error, setError] = useState(null);\r\n  const [isRecording, setIsRecording] = useState(false);\r\n  const [isProcessing, setIsProcessing] = useState(false);\r\n  const [displayedDiagnosis, setDisplayedDiagnosis] = useState(\"\");\r\n  const [displayedSymptoms, setDisplayedSymptoms] = useState(\"\");\r\n  const [isDiagnosisFinal, setIsDiagnosisFinal] = useState(false);\r\n\r\n  const audioContextRef = useRef(null);\r\n  const recorderRef = useRef(null);\r\n  const silenceTimer = useRef(null);\r\n  const speechRef = useRef(null);\r\n  const fullDiagnosisRef = useRef(\"\");\r\n  const followUpsRef = useRef(\"\");\r\n  const recommendationsRef = useRef(\"\");\r\n  const keySymptomsRef = useRef(\"\");\r\n\r\n  useEffect(() => {\r\n    if (keySymptomsRef.current && !displayedSymptoms) {\r\n      revealTextAndSpeak(keySymptomsRef.current, setDisplayedSymptoms);\r\n    }\r\n    if (fullDiagnosisRef.current && !isDiagnosisFinal) {\r\n      revealTextAndSpeak(fullDiagnosisRef.current, setDisplayedDiagnosis);\r\n      setIsDiagnosisFinal(true);\r\n    }\r\n  }, [diagnosis, keySymptoms, isDiagnosisFinal, displayedSymptoms]);\r\n\r\n  const revealTextAndSpeak = (text, setter) => {\r\n    if (!text) return;\r\n    let index = 0;\r\n    setter(\"\");\r\n    let fullText = \"\";\r\n\r\n    const interval = setInterval(() => {\r\n      const nextChar = text[index];\r\n      fullText += nextChar;\r\n      setter((prev) => prev + nextChar);\r\n      index++;\r\n      if (index >= text.length) {\r\n        clearInterval(interval);\r\n        const speech = new SpeechSynthesisUtterance(fullText);\r\n        speech.lang = \"en-US\";\r\n        speech.rate = 1;\r\n        speech.pitch = 1;\r\n        window.speechSynthesis.speak(speech);\r\n      }\r\n    }, 60);\r\n  };\r\n\r\n  const handleStartRecording = async () => {\r\n    setError(null);\r\n    setIsRecording(true);\r\n    try {\r\n      audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n      const stream = await navigator.mediaDevices.getUserMedia({ audio: true });\r\n      recorderRef.current = new Recorder(audioContextRef.current);\r\n      await recorderRef.current.init(stream);\r\n      recorderRef.current.start();\r\n\r\n      const audioInput = audioContextRef.current.createMediaStreamSource(stream);\r\n      const analyser = audioContextRef.current.createAnalyser();\r\n      audioInput.connect(analyser);\r\n\r\n      const checkSilence = () => {\r\n        const buffer = new Float32Array(analyser.fftSize);\r\n        analyser.getFloatTimeDomainData(buffer);\r\n        const maxAmplitude = Math.max(...buffer.map(Math.abs));\r\n\r\n        if (maxAmplitude < 0.01) {\r\n          if (!silenceTimer.current) {\r\n            silenceTimer.current = setTimeout(() => handleStopRecording(), 1500);\r\n          }\r\n        } else {\r\n          clearTimeout(silenceTimer.current);\r\n          silenceTimer.current = null;\r\n        }\r\n        requestAnimationFrame(checkSilence);\r\n      };\r\n\r\n      checkSilence();\r\n    } catch (error) {\r\n      setError(\"Microphone access denied or not available.\");\r\n      setIsRecording(false);\r\n    }\r\n  };\r\n\r\n  const handleStopRecording = async () => {\r\n    setIsRecording(false);\r\n    setIsProcessing(true);\r\n    clearTimeout(silenceTimer.current);\r\n\r\n    try {\r\n      const { blob } = await recorderRef.current.stop();\r\n      const audioFile = new File([blob], \"latest_audio.wav\", { type: \"audio/wav\" });\r\n      const formData = new FormData();\r\n      formData.append(\"file\", audioFile);\r\n\r\n      const transcriptionResponse = await fetch(`${backendUrl}/transcribe`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const transcriptionData = await transcriptionResponse.json();\r\n      if (transcriptionData.error) {\r\n        setError(transcriptionData.error);\r\n        setIsProcessing(false);\r\n        return;\r\n      }\r\n\r\n      setConversation([{ role: \"AI\", text: `Transcribed Text: ${transcriptionData.transcription}` }]);\r\n\r\n      const analysisResponse = await fetch(`${backendUrl}/analyze`, {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify({ text: transcriptionData.transcription }),\r\n      });\r\n\r\n      const analysisData = await analysisResponse.json();\r\n      const result = cleanText(analysisData.analysis);\r\n\r\n      keySymptomsRef.current = extractSection(result, \"Key Symptoms Identified\") || \"No key symptoms mentioned.\";\r\n      fullDiagnosisRef.current = extractSection(result, \"Possible Medical Diagnosis\") || \"Diagnosis pending further details.\";\r\n      followUpsRef.current = extractSection(result, \"Follow-up Questions for Further Diagnosis\") || \"No follow-up questions provided.\";\r\n      recommendationsRef.current = extractSection(result, \"Recommended Next Steps\") || \"No recommendations provided.\";\r\n\r\n      setKeySymptoms(keySymptomsRef.current);\r\n      setDiagnosis(fullDiagnosisRef.current);\r\n    } catch (error) {\r\n      setError(\"Server error: \" + error.message);\r\n    }\r\n\r\n    setIsProcessing(false);\r\n  };\r\n\r\n  const extractSection = (text, label) => {\r\n    const safeLabel = label.replace(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\");\r\n    const regex = new RegExp(`\\\\*\\\\*${safeLabel}:\\\\*\\\\*\\\\s*([\\\\s\\\\S]*?)(?=\\\\n\\\\*\\\\*|$)`, \"m\");\r\n    const match = text.match(regex);\r\n    return match && match[1] ? match[1].trim() : null;\r\n  };\r\n\r\n  const cleanText = async (text) => {\r\n    if (!text) return \"\";\r\n    text = text.replace(/undefined/g, \"\").replace(/\\bDiaanosis\\b/, \"Diagnosis\").trim();\r\n    return await fixTypos(text); // Awaiting the asynchronous fixTypos function\r\n  };\r\n\r\n  const normalizeRepeats = (word) => word.replace(/(\\w)\\1{2,}/g, \"$1$1\");\r\n\r\n  const speakText = (text) => {\r\n    if (speechRef.current) window.speechSynthesis.cancel();\r\n    const speech = new SpeechSynthesisUtterance(text);\r\n    speech.lang = \"en-US\";\r\n    speech.rate = 1;\r\n    speech.pitch = 1;\r\n    speechRef.current = speech;\r\n    window.speechSynthesis.speak(speech);\r\n  };\r\n\r\n  const handleFollowUpsClick = () => {\r\n    revealTextAndSpeak(followUpsRef.current, setDisplayFollowUps);\r\n  };\r\n\r\n  const handleRecommendationsClick = () => {\r\n    revealTextAndSpeak(recommendationsRef.current, setDisplayRecommendations);\r\n  };\r\n\r\n  return (\r\n    <div className=\"chatbot-container\">\r\n      <h1>Medical AI Chatbot</h1>\r\n      {error && <p className=\"error-message\">Error: {error}</p>}\r\n\r\n      <div className=\"chatbox\">\r\n        {conversation.map((msg, index) => (\r\n          <div key={index} className=\"message\">\r\n            <strong>{msg.role}: </strong>{msg.text}\r\n          </div>\r\n        ))}\r\n      </div>\r\n\r\n      {(keySymptoms || diagnosis) && (\r\n        <div className=\"diagnosis-box\">\r\n          <h2>Diagnosis</h2>\r\n          <p><strong>Key Symptoms Identified:</strong> {displayedSymptoms}</p>\r\n          <p><strong>Possible Medical Diagnosis:</strong></p>\r\n          <p>{displayedDiagnosis}</p>\r\n          <br />\r\n          <button onClick={handleFollowUpsClick}>Show Follow-up Questions</button>\r\n          <button onClick={handleRecommendationsClick}>Show Recommendations</button>\r\n          {displayFollowUps && <div><h4>Follow-up Questions:</h4><p>{displayFollowUps}</p></div>}\r\n          {displayRecommendations && <div><h4>Recommendations:</h4><p>{displayRecommendations}</p></div>}\r\n        </div>\r\n      )}\r\n\r\n      {!isRecording && !isProcessing && (\r\n        <button onClick={handleStartRecording}>Start Recording</button>\r\n      )}\r\n\r\n      {isRecording && <p>🎙️ Listening... Speak now.</p>}\r\n      {isProcessing && <p>🔄 Processing audio, please wait...</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MedicalChatbot;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}